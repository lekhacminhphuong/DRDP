{"version":3,"sources":["views/ProfilePage/General/ProfileDetails.js","views/ProfilePage/General/SuccessSnackbar.js","views/ProfilePage/General/GeneralSettings.js","views/ProfilePage/General/index.js","views/ProfilePage/Security.js","views/ProfilePage/index.js"],"names":["useStyles","makeStyles","theme","root","content","display","alignItems","flexDirection","textAlgin","name","marginTop","spacing","avatar","height","width","removeBotton","ProfileDetails","profile","className","rest","classes","Card","clsx","CardContent","Avatar","src","Typography","gutterBottom","variant","firstName","lastName","color","state","country","timezone","backgroundColor","colors","green","message","icon","marginRight","SuccessSnackbar","open","onClose","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","SnackbarContent","defaultProps","saveButton","palette","common","white","stateOptions","GeneralSettings","useState","openSnackbar","setOpenSnackbar","email","phone","isPublic","canHire","values","setValues","handleChange","event","persist","target","type","checked","value","onSubmit","preventDefault","CardHeader","title","Divider","Grid","container","item","md","xs","TextField","fullWidth","label","onChange","required","select","SelectProps","native","map","key","CardActions","Button","General","lg","xl","Security","password","confirm","valid","sm","disabled","paddingTop","paddingBottom","ProfilePage","match","history","Page","Container","maxWidth"],"mappings":"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","file":"static/js/16.2b71e9cb.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardContent,\n  Avatar,\n  Typography\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  content: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    textAlgin: 'center'\n  },\n  name: {\n    marginTop: theme.spacing(1)\n  },\n  avatar: {\n    height: 100,\n    width: 100\n  },\n  removeBotton: {\n    width: '100%'\n  }\n}));\n\nfunction ProfileDetails({ profile, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent className={classes.content}>\n        <Avatar\n          className={classes.avatar}\n          src={profile.avatar}\n        />\n        <Typography\n          className={classes.name}\n          gutterBottom\n          variant=\"h3\"\n        >\n          {`${profile.firstName} ${profile.lastName}`}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body1\"\n        >\n          {`${profile.state}, ${profile.country}`}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          {profile.timezone}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nProfileDetails.propTypes = {\n  className: PropTypes.string,\n  profile: PropTypes.object.isRequired\n};\n\nexport default ProfileDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Snackbar, SnackbarContent, colors } from '@material-ui/core';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircleOutlined';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    backgroundColor: colors.green[600]\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  icon: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nfunction SuccessSnackbar({ open, onClose }) {\n  const classes = useStyles();\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'center'\n      }}\n      autoHideDuration={6000}\n      onClose={onClose}\n      open={open}\n    >\n      <SnackbarContent\n        className={classes.content}\n        message={(\n          <span className={classes.message}>\n            <CheckCircleIcon className={classes.icon} />\n            Successfully saved changes!\n          </span>\n        )}\n        variant=\"h6\"\n      />\n    </Snackbar>\n  );\n}\n\nSuccessSnackbar.propTypes = {\n  onClose: PropTypes.func,\n  open: PropTypes.bool\n};\n\nSuccessSnackbar.defaultProps = {\n  open: true,\n  onClose: () => {}\n};\n\nexport default SuccessSnackbar;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Grid,\n  Divider,\n  Switch,\n  TextField,\n  Typography,\n  colors\n} from '@material-ui/core';\nimport SuccessSnackbar from './SuccessSnackbar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  saveButton: {\n    color: theme.palette.common.white,\n    backgroundColor: '#12384E',\n    '&:hover': {\n      backgroundColor: '#12384E'\n    }\n  }\n}));\n\nconst stateOptions = ['Alabama', 'New York', 'San Francisco'];\n\nfunction GeneralSettings({ profile, className, ...rest }) {\n  const classes = useStyles();\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [values, setValues] = useState({\n    firstName: profile.firstName,\n    lastName: profile.lastName,\n    email: profile.email,\n    phone: profile.phone,\n    state: profile.state,\n    country: profile.country,\n    isPublic: profile.isPublic,\n    canHire: profile.canHire\n  });\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues({\n      ...values,\n      [event.target.name]:\n        event.target.type === 'checkbox'\n          ? event.target.checked\n          : event.target.value\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setOpenSnackbar(true);\n  };\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <form onSubmit={handleSubmit}>\n        <CardHeader title=\"Update Profile\" />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={4}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"First name\"\n                name=\"firstName\"\n                onChange={handleChange}\n                required\n                value={values.firstName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                name=\"lastName\"\n                onChange={handleChange}\n                required\n                value={values.lastName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                name=\"email\"\n                onChange={handleChange}\n                required\n                value={values.email}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Phone Number\"\n                name=\"phone\"\n                onChange={handleChange}\n                type=\"text\"\n                value={values.phone}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Select State\"\n                name=\"state\"\n                onChange={handleChange}\n                select\n                // eslint-disable-next-line react/jsx-sort-props\n                SelectProps={{ native: true }}\n                value={values.state}\n                variant=\"outlined\"\n              >\n                {stateOptions.map((state) => (\n                  <option\n                    key={state}\n                    value={state}\n                  >\n                    {state}\n                  </option>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Country\"\n                name=\"country\"\n                onChange={handleChange}\n                required\n                value={values.country}\n                variant=\"outlined\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            className={classes.saveButton}\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Save Changes\n          </Button>\n        </CardActions>\n      </form>\n      <SuccessSnackbar\n        onClose={handleSnackbarClose}\n        open={openSnackbar}\n      />\n    </Card>\n  );\n}\n\nGeneralSettings.propTypes = {\n  className: PropTypes.string,\n  profile: PropTypes.object.isRequired\n};\n\nexport default GeneralSettings;\n","import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport ProfileDetails from './ProfileDetails';\nimport GeneralSettings from './GeneralSettings';\n\nconst profile = {\n  firstName: \"First\",\n  lastName: \"Last\",\n  email: \"firstlast@gmail.com\",\n  phone: \"123456789\",\n  state: \"Washington\",\n  country: \"United States\",\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction General({ className, ...rest }) {\n  const classes = useStyles();\n  // const [profile, setProfile] = useState(null);\n\n  // useEffect(() => {\n  //   let mounted = true;\n\n  //   const fetchProfile = () => {\n  //     axios.get('/api/account/profile').then((response) => {\n  //       if (mounted) {\n  //         setProfile(response.data.profile);\n  //       }\n  //     });\n  //   };\n\n  //   fetchProfile();\n\n  //   return () => {\n  //     mounted = false;\n  //   };\n  // }, []);\n\n  // if (!profile) {\n  //   return null;\n  // }\n\n  return (\n    <Grid\n      {...rest}\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n    >\n      <Grid\n        item\n        lg={4}\n        md={6}\n        xl={3}\n        xs={12}\n      >\n        <ProfileDetails profile={profile} />\n      </Grid>\n      <Grid\n        item\n        lg={8}\n        md={6}\n        xl={9}\n        xs={12}\n      >\n        <GeneralSettings profile={profile} />\n      </Grid>\n    </Grid>\n  );\n}\n\nGeneral.propTypes = {\n  className: PropTypes.string\n};\n\nexport default General;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Grid,\n  Button,\n  Divider,\n  TextField,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  saveButton: {\n    color: theme.palette.common.white,\n    backgroundColor: '#12384E',\n    '&:hover': {\n      backgroundColor: '#12384E'\n    }\n  }\n}));\n\nfunction Security({ className, ...rest }) {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const valid = values.password && values.password === values.confirm;\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Change password\" />\n      <Divider />\n      <CardContent>\n        <form>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                required\n                label=\"New password\"\n                name=\"password\"\n                onChange={handleChange}\n                type=\"password\"\n                value={values.password}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                required\n                label=\"Confirm password\"\n                name=\"confirm\"\n                onChange={handleChange}\n                type=\"password\"\n                value={values.confirm}\n                variant=\"outlined\"\n              />\n            </Grid>\n          </Grid>\n        </form>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button\n          className={classes.saveButton}\n          disabled={!valid}\n          variant=\"contained\"\n        >\n          Save\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nSecurity.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Security;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Container } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport General from './General';\nimport Security from './Security';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n  content: {\n    marginTop: theme.spacing(4)\n  }\n}));\n\nfunction ProfilePage({ match, history }) {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"DRDP - Profile\"\n    >\n      <Container maxWidth=\"lg\">\n        <General />\n        <Security className={classes.content} />\n      </Container>\n    </Page>\n  );\n}\n\nexport default ProfilePage;\n"],"sourceRoot":""}