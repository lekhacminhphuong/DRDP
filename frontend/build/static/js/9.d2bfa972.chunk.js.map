{"version":3,"sources":["views/CurrentReportPage/Header.js","views/CurrentReportPage/FilterSpace.js","views/CurrentReportPage/GraphSpace.js","views/CurrentReportPage/TableSpace.js","views/CurrentReportPage/GraphTab.js","views/CurrentReportPage/index.js"],"names":["useStyles","makeStyles","theme","root","paddingBottom","spacing","title","width","Header","className","rest","classes","clsx","Grid","container","justify","item","Typography","component","gutterBottom","variant","Button","RouterLink","color","endIcon","to","selectEmpty","marginTop","search","position","borderRadius","shape","backgroundColor","fade","palette","common","black","marginRight","marginLeft","inputRoot","inputInput","padding","formControl","margin","FilterSpace","props","React","useState","age","name","state","inputLabel","useRef","labelWidth","setLabelWidth","useEffect","current","offsetWidth","FormControl","InputLabel","ref","htmlFor","Select","native","value","jurisdiction","onChange","handleChange","inputProps","id","subReport","GraphSpace","undefined","data","vals","years","j","push","year","PAAT","A3","val","PADD","PATBI","PAVA","graphData","i","length","Year","height","top","right","left","bottom","strokeDasharray","dataKey","label","offset","angle","textAnchor","type","stroke","activeDot","r","TableSpace","tableData","totalVals","jur","columns","selector","sortable","pagination","TabPanel","children","index","other","role","hidden","aria-labelledby","Box","p","GraphTab","currentTab","setCurrentTab","Tabs","event","newTab","indicatorColor","Tab","paddingTop","header","marginBottom","filter","results","DataPage","useContext","Context","actions","filterState","setFilterState","filteredData","setFilteredData","propLength","setPropLength","filtData","mockdata","filterData","Page","Container","maxWidth","target"],"mappings":"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","file":"static/js/9.d2bfa972.chunk.js","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Grid, Button } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingBottom: theme.spacing(0.5)\n  },\n  title: {\n    width: \"85%\"\n  }\n}));\n\nexport default function Header({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        container\n        justify=\"space-between\"\n      >\n        <Grid item className={classes.title}>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Gallery / Total Population Served\n          </Typography>\n          <Typography\n            component=\"h1\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            Total Population Served\n          </Typography>\n          <Typography variant=\"subtitle1\">\n            This report shows the total number of people served by P&amp;As in the selected state for the selected years.<br/>\n            The data comes from Part 1 Section A of the One PPR Report, dealing with Individuals Served.<br/>\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            component={RouterLink}\n            variant=\"outlined\"\n            color=\"primary\"\n            endIcon={<ArrowBackIosIcon />}\n            to=\"/gallery\"\n          >\n            Back\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles(theme => ({\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.black, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.black, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 30,\n        marginTop: 30,\n        width: \"20vw\"\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 2),\n    },\n    formControl: {\n        margin: 20\n    }\n}));\n\nexport function FilterSpace(props) {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        age: '',\n        name: 'hai',\n    });\n\n    const inputLabel = React.useRef(null);\n    const [labelWidth, setLabelWidth] = React.useState(0);\n    React.useEffect(() => {\n        setLabelWidth(inputLabel.current.offsetWidth);\n    }, []);\n\n    const handleChange = name => event => {\n        setState({\n            ...state,\n            [name]: event.target.value,\n        });\n    };\n\n    return (\n        <div>\n            {/* HIDDEN for MVP\n            <div className={classes.search}>\n                <InputBase\n                    placeholder=\"Search\"\n                    classes={{\n                        root: classes.inputRoot,\n                        input: classes.inputInput,\n                    }}\n                    inputProps={{ 'aria-label': 'search' }}\n                />\n            </div> */}\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel ref={inputLabel} htmlFor=\"outlined-age-native-simple\">\n                    State\n                </InputLabel>\n                <Select\n                    native\n                    value={state.jurisdiction}\n                    onChange={props.handleChange('jurisdiction')}\n                    labelWidth={labelWidth}\n                    inputProps={{\n                        name: 'jurisdiction',\n                        id: 'outlined-age-native-simple',\n                    }}\n                >\n                    <option value={'Alabama'}>Alabama</option>\n                    <option value={'Alaska'}>Alaska</option>\n                    <option value={'American Samoa'}>American Samoa</option>\n                    <option value={'Arizona'}>Arizona</option>\n                    <option value={'Arkansas'}>Arkansas</option>\n                    <option value={'California'}>California</option>\n                    <option value={'Colorado'}>Colorado</option>\n                    <option value={'Connecticut'}>Connecticut</option>\n                    <option value={'Delaware'}>Delaware</option>\n                    <option value={'District of Columbia'}>District of Columbia</option> \n                    <option value={'Florida'}>Florida</option>\n                    <option value={'Georgia'}>Georgia</option>\n                    <option value={'Guam'}>Guam</option>\n                    <option value={'Hawaii'}>Hawaii</option>\n                    <option value={'Idaho'}>Idaho</option>\n                    <option value={'Illinois'}>Illinois</option>\n                    <option value={'Indiana'}>Indiana</option>\n                    <option value={'Iowa'}>Iowa</option>\n                    <option value={'Kansas'}>Kansas</option>\n                    <option value={'Kentucky'}>Kentucky</option>\n                    <option value={'Louisiana'}>Louisiana</option>\n                    <option value={'Maine'}>Maine</option>\n                    <option value={'Maryland'}>Maryland</option>\n                    <option value={'Massachusetts'}>Massachusetts</option>\n                    <option value={'Michigan'}>Michigan</option>\n                    <option value={'Minnesota'}>Minnesota</option>\n                    <option value={'Minor Outlying Islands'}>Minor Outlying Islands</option>\n                    <option value={'Mississippi'}>Mississippi</option>\n                    <option value={'Missouri'}>Missouri</option>\n                    <option value={'Montana'}>Montana</option>\n                    <option value={'Nebraska'}>Nebraska</option>\n                    <option value={'Nevada'}>Nevada</option>\n                    <option value={'New Hampshire'}>New Hampshire</option>\n                    <option value={'New Jersey'}>New Jersey</option>\n                    <option value={'New Mexico'}>New Mexico</option>\n                    <option value={'New York'}>New York</option>\n                    <option value={'North Carolina'}>North Carolina</option>\n                    <option value={'North Dakota'}>North Dakota</option>\n                    <option value={'Northern Mariana Islands'}>Northern Mariana Islands</option>\n                    <option value={'Ohio'}>Ohio</option>\n                    <option value={'Oklahoma'}>Oklahoma</option>\n                    <option value={'Oregon'}>Oregon</option>\n                    <option value={'Pennsylvania'}>Pennsylvania</option>\n                    <option value={'Puerto Rico'}>Puerto Rico</option>\n                    <option value={'Rhode Island'}>Rhode Island</option>\n                    <option value={'South Carolina'}>South Carolina</option>\n                    <option value={'South Dakota'}>South Dakota</option>\n                    <option value={'Tennessee'}>Tennessee</option>\n                    <option value={'Texas'}>Texas</option>\n                    <option value={'U.S. Virgin Islands'}>U.S. Virgin Islands</option>\n                    <option value={'Utah'}>Utah</option>\n                    <option value={'Vermont'}>Vermont</option>\n                    <option value={'Virginia'}>Virginia</option>\n                    <option value={'Washington'}>Washington</option>\n                    <option value={'West Virginia'}>West Virginia</option>\n                    <option value={'Wisconsin'}>Wisconsin</option>\n                    <option value={'Wyoming'}>Wyoming</option>\n                </Select>\n            </FormControl>\n            {/* <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel ref={inputLabel} htmlFor=\"outlined-age-native-simple\">\n                    Year\n                </InputLabel>\n                <Select\n                    native\n                    value={state.year}\n                    onChange={props.handleChange('year')}\n                    labelWidth={labelWidth}\n                    inputProps={{\n                        name: 'year',\n                        id: 'outlined-age-native-simple',\n                    }}\n                >\n                    <option value=\"\" />\n                    <option value={2011}>2011</option>\n                    <option value={2012}>2012</option>\n                    <option value={2013}>2013</option>\n                    <option value={2014}>2014</option>\n                    <option value={2015}>2015</option>\n                    <option value={2016}>2016</option>\n                    <option value={2017}>2017</option>\n                    <option value={2018}>2018</option>\n                    <option value={2019}>2019</option>\n                    <option value={2020}>2020</option>\n                </Select>\n            </FormControl> */}\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel ref={inputLabel} htmlFor=\"outlined-age-native-simple\">\n                    Section\n                </InputLabel>\n                <Select\n                    native\n                    value={state.subReport}\n                    onChange={props.handleChange('subReport')}\n                    labelWidth={labelWidth}\n                    inputProps={{\n                        name: 'subReport',\n                        id: 'outlined-age-native-simple',\n                    }}\n                >\n                    <option value={'One PPR'}>One PPR (All)</option>\n                    <option value={'PADD'}>PADD</option>\n                    <option value={'PAAT'}>PAAT</option>\n                    <option value={'PATBI'}>PATBI</option>\n                    <option value={'PAVA'}>PAVA</option>\n                </Select>\n            </FormControl>\n        </div>\n    );\n}","import React from 'react';\nimport {\n    LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Text\n} from 'recharts';\n\nexport function GraphSpace(props) {\n\n    if (props.data != undefined) {\n\n        // format the data specific to this graph:\n        //get years\n        let vals = []\n        let years = []\n        for (let j = 0; j < 11; j++) {\n            years.push(props.data[j].year)\n            if (props.subReport == 'One PPR') {\n                vals.push(props.data[j].PAAT.A3.val + props.data[j].PADD.A3.val + props.data[j].PATBI.A3.val + props.data[j].PAVA.A3.val)\n            } else if (props.subReport == 'PAAT') {\n                vals.push(props.data[j].PAAT.A3.val)\n            } else if (props.subReport == 'PADD') {\n                vals.push(props.data[j].PADD.A3.val)\n            } else if (props.subReport == 'PATBI') {\n                vals.push(props.data[j].PATBI.A3.val)\n            } else if (props.subReport == 'PAVA') {\n                vals.push(props.data[j].PAVA.A3.val)\n            }\n        }\n        //format for the graph\n        const graphData = []\n        for (let i = 0; i < years.length; i++) {\n            graphData.push({ Year: years[i], ['Total Served']: vals[i] })\n        }\n\n        return (\n            <LineChart\n                width={900}\n                height={500}\n                data={graphData}\n                margin={{\n                    top: 15, right: 30, left: 10, bottom: 5\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"Year\" label={{ value: 'Year', offset: '-4', position: 'insideBottom' }} />\n                <YAxis label={{ value: 'Total number of people served by P&As', angle: -90, position: 'insideBottomLeft', textAnchor: 'middle' }}  />\n                <Tooltip />\n                <Line type=\"monotone\" dataKey=\"Total Served\" stroke=\"#12384E\" activeDot={{ r: 8 }} />\n            </LineChart>\n        )\n    } else {\n        return (\n            <h1>Loading...</h1>\n        )\n    }\n}","import React, { useEffect } from 'react';\nimport DataTable from 'react-data-table-component';\n\nexport function TableSpace(props) {\n\n    const columns = [\n        {\n            name: 'Year',\n            selector: 'year',\n            sortable: true,\n        },\n        {\n            name: 'Jurisdiction',\n            selector: 'jurisdiction',\n            sortable: true,\n        },\n        {\n            name: 'Total Served',\n            selector: 'Total Served',\n            sortable: true,\n        }\n    ];\n\n    const tableData = []\n\n    if (props.data != undefined) {\n\n        //format data for use in chart\n        let years = []\n        let totalVals = []\n        let jur = []\n\n        for (let j = 0; j < 11; j++) {\n            \n            years.push(props.data[j].year)\n            jur.push(props.data[j].jurisdiction)\n\n            if (props.subReport == 'One PPR') {\n                totalVals.push(props.data[j].PAAT.A3.val + props.data[j].PADD.A3.val + props.data[j].PATBI.A3.val + props.data[j].PAVA.A3.val)\n            }  \n            if (props.subReport == 'PAAT') {\n                totalVals.push(props.data[j].PAAT.A3.val)\n            }  \n            if (props.subReport == 'PADD') {\n                totalVals.push(props.data[j].PADD.A3.val)\n            }  \n            if (props.subReport == 'PATBI') {\n                totalVals.push(props.data[j].PATBI.A3.val)\n            }  \n            if (props.subReport == 'PAVA') {\n                totalVals.push(props.data[j].PAVA.A3.val)\n            }\n        }\n\n        for (let i = 0; i < years.length; i++) {\n            tableData.push({\n                year: years[i],\n                ['Total Served']: totalVals[i],\n                jurisdiction: jur[i]\n            })\n        }\n\n        return (\n            <div id='tableSpace'>\n                <DataTable\n                    columns={columns}\n                    data={tableData}\n                    pagination\n                />\n            </div>\n        )\n    } else {\n        return(\n            <div>loading</div>\n        )\n    }    \n    \n}\n\n","import React, { useState } from \"react\";\nimport { GraphSpace } from './GraphSpace';\nimport { TableSpace } from './TableSpace';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nexport function GraphTab(props) {\n  const [currentTab, setCurrentTab] = useState(0);\n\n  const handleChangeTab = (event, newTab) => {\n    setCurrentTab(newTab);\n  };\n\n  return (\n    <div>\n      <Tabs\n        value={currentTab}\n        onChange={handleChangeTab}\n        indicatorColor=\"primary\"\n      >\n        <Tab label=\"Graph\" />\n        <Tab label=\"Data\" />\n      </Tabs>\n      <TabPanel value={currentTab} index={0}>\n        <GraphSpace data={props.data} jurisdiction={props.jurisdiction} subReport={props.subReport} length={props.length} />\n      </TabPanel>\n      <TabPanel value={currentTab} index={1}>\n        <TableSpace data={props.data} jurisdiction={props.jurisdiction} subReport={props.subReport} length={props.length}/>\n      </TabPanel>\n    </div>\n  )\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Container } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport { FilterSpace } from './FilterSpace';\nimport { GraphTab } from './GraphTab';\nimport { db } from '../../config/Fire';\nimport firebase from '../../config/Fire';\nimport mockdata from '../../testie.json';\nimport useGlobal from '../../globalStore/useGlobal';\nimport Context from '../../globalStore/context';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n  },\n  header: {\n    marginBottom: theme.spacing(2),\n  },\n  filter: {\n    marginTop: theme.spacing(3),\n  },\n  results: {\n    marginTop: theme.spacing(6),\n  },\n}));\n\nfunction DataPage() {\n\n  const { state, actions } = useContext(Context);\n  const [filterState, setFilterState] = useState({\n    jurisdiction: 'Alabama',\n    subReport: 'One PPR'\n  });\n  const [filteredData, setFilteredData] = useState();\n  const [propLength, setPropLength] = useState();\n  const classes = useStyles();\n\n  // useEffect(() => {\n  //   if (state == null) {\n  //     console.log('Data page says global state is null');\n  //     const dat = []\n  //     db.collection('test3oneppr')\n  //       .get()\n  //       .then((snapshot) => {\n  //         snapshot.docs.forEach(doc => {\n  //           dat.push(doc.data())\n  //         })\n  //       })\n  //       .then(() => {\n  //         // set the global state\n  //         actions({ type: 'setState', payload: { dat } })\n  //       })\n  //       .then(() => {\n  //         console.log('global state set');\n  //       })\n  //   } else {\n  //     console.log('no data pull')\n  //   }\n  // }, [])\n\n  //function for the filters\n  const handleChange = name => event => {\n    setFilterState({\n      ...filterState,\n      [name]: event.target.value,\n    })\n  };\n\n  function filterData() {\n    let filtData = []\n    for (let i = 0; i < mockdata.length; i++) {\n      if (mockdata[i].jurisdiction == filterState.jurisdiction) {\n        filtData.push(mockdata[i])\n      }\n    }\n    setFilteredData(filtData)\n    setPropLength(filtData.length)\n  }\n\n  useEffect(() => {\n    filterData();\n  }, [filterState])\n  \n\n  return (\n    <Page className={classes.root} title=\"DRDP - Total Population Served\">\n      <Container maxWidth=\"lg\">\n        <Header className={classes.header} />\n        <FilterSpace handleChange={handleChange} />\n        <div>\n          <GraphTab data={filteredData} jurisdiction={filterState.jurisdiction} subReport={filterState.subReport} length={propLength}/>\n        </div>\n      </Container>\n    </Page>\n  );\n}\n\nexport default DataPage;\n"],"sourceRoot":""}