{"version":3,"sources":["views/EthnicityReport2/Header.js","views/EthnicityReport2/FilterSpace.js","views/EthnicityReport2/GraphSpace.js","views/EthnicityReport2/TableSpace.js","views/EthnicityReport2/GraphTab.js","views/EthnicityReport2/index.js"],"names":["useStyles","makeStyles","theme","root","paddingBottom","spacing","title","width","Header","className","rest","classes","clsx","Grid","container","justify","item","Typography","component","gutterBottom","variant","Button","RouterLink","color","endIcon","to","selectEmpty","marginTop","search","position","borderRadius","shape","backgroundColor","fade","palette","common","black","marginRight","marginLeft","inputRoot","inputInput","padding","formControl","margin","FilterSpace","props","React","useState","age","name","state","inputLabel","useRef","labelWidth","setLabelWidth","useEffect","current","offsetWidth","FormControl","InputLabel","ref","htmlFor","Select","native","value","jurisdiction","onChange","handleChange","inputProps","id","year","subReport","GraphSpace","undefined","data","vals","years","console","log","ethnicity","i","length","push","PADD","I1","val","PAAT","PATBI","PAVA","I2","I3","I4","I5","I6","graphData","j","sort","obj1","obj2","a","b","comparison","height","top","right","left","bottom","strokeDasharray","dataKey","fill","TableSpace","Year","columns","selector","sortable","pagination","TabPanel","children","index","other","role","hidden","aria-labelledby","Box","p","GraphTab","currentTab","setCurrentTab","Tabs","event","newTab","indicatorColor","Tab","label","paddingTop","header","marginBottom","filter","results","DataPage","useContext","Context","actions","filterState","setFilterState","filteredData","setFilteredData","propLength","setPropLength","filtData","filterData","Page","Container","maxWidth","target"],"mappings":"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","file":"static/js/15.22095901.chunk.js","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Grid, Button } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingBottom: theme.spacing(0.5)\n  },\n  title: {\n    width: \"85%\"\n  }\n}));\n\nexport default function Header({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        container\n        justify=\"space-between\"\n      >\n        <Grid item className={classes.title}>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Gallery / Ethnicity Over Time\n          </Typography>\n          <Typography\n            component=\"h1\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            Ethnicity Over Time\n          </Typography>\n          <Typography variant=\"subtitle1\">\n            This report shows number of people served by ethnicity in the selected state for all reported years.<br/>\n            The data comes from Part 1 Section I of the One PPR Report, dealing with Racial and Ethnic Diversity of Individuals Served.<br/>\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            component={RouterLink}\n            variant=\"outlined\"\n            color=\"primary\"\n            endIcon={<ArrowBackIosIcon />}\n            to=\"/gallery\"\n          >\n            Back\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles(theme => ({\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.black, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.black, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 30,\n        marginTop: 30,\n        width: \"20vw\"\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 2),\n    },\n    formControl: {\n        margin: 20\n    }\n}));\n\nexport function FilterSpace(props) {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        age: '',\n        name: 'hai',\n    });\n\n    const inputLabel = React.useRef(null);\n    const [labelWidth, setLabelWidth] = React.useState(0);\n    React.useEffect(() => {\n        setLabelWidth(inputLabel.current.offsetWidth);\n    }, []);\n\n    const handleChange = name => event => {\n        setState({\n            ...state,\n            [name]: event.target.value,\n        });\n    };\n\n    return (\n        <div>\n            {/* HIDDEN for MVP\n            <div className={classes.search}>\n                <InputBase\n                    placeholder=\"Search\"\n                    classes={{\n                        root: classes.inputRoot,\n                        input: classes.inputInput,\n                    }}\n                    inputProps={{ 'aria-label': 'search' }}\n                />\n            </div> */}\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel ref={inputLabel} htmlFor=\"outlined-age-native-simple\">\n                    State\n                </InputLabel>\n                <Select\n                    native\n                    value={state.jurisdiction}\n                    onChange={props.handleChange('jurisdiction')}\n                    labelWidth={labelWidth}\n                    inputProps={{\n                        name: 'jurisdiction',\n                        id: 'outlined-age-native-simple',\n                    }}\n                >\n                    <option value={'Alabama'}>Alabama</option>\n                    <option value={'Alaska'}>Alaska</option>\n                    <option value={'American Samoa'}>American Samoa</option>\n                    <option value={'Arizona'}>Arizona</option>\n                    <option value={'Arkansas'}>Arkansas</option>\n                    <option value={'California'}>California</option>\n                    <option value={'Colorado'}>Colorado</option>\n                    <option value={'Connecticut'}>Connecticut</option>\n                    <option value={'Delaware'}>Delaware</option>\n                    <option value={'District of Columbia'}>District of Columbia</option> \n                    <option value={'Florida'}>Florida</option>\n                    <option value={'Georgia'}>Georgia</option>\n                    <option value={'Guam'}>Guam</option>\n                    <option value={'Hawaii'}>Hawaii</option>\n                    <option value={'Idaho'}>Idaho</option>\n                    <option value={'Illinois'}>Illinois</option>\n                    <option value={'Indiana'}>Indiana</option>\n                    <option value={'Iowa'}>Iowa</option>\n                    <option value={'Kansas'}>Kansas</option>\n                    <option value={'Kentucky'}>Kentucky</option>\n                    <option value={'Louisiana'}>Louisiana</option>\n                    <option value={'Maine'}>Maine</option>\n                    <option value={'Maryland'}>Maryland</option>\n                    <option value={'Massachusetts'}>Massachusetts</option>\n                    <option value={'Michigan'}>Michigan</option>\n                    <option value={'Minnesota'}>Minnesota</option>\n                    <option value={'Minor Outlying Islands'}>Minor Outlying Islands</option>\n                    <option value={'Mississippi'}>Mississippi</option>\n                    <option value={'Missouri'}>Missouri</option>\n                    <option value={'Montana'}>Montana</option>\n                    <option value={'Nebraska'}>Nebraska</option>\n                    <option value={'Nevada'}>Nevada</option>\n                    <option value={'New Hampshire'}>New Hampshire</option>\n                    <option value={'New Jersey'}>New Jersey</option>\n                    <option value={'New Mexico'}>New Mexico</option>\n                    <option value={'New York'}>New York</option>\n                    <option value={'North Carolina'}>North Carolina</option>\n                    <option value={'North Dakota'}>North Dakota</option>\n                    <option value={'Northern Mariana Islands'}>Northern Mariana Islands</option>\n                    <option value={'Ohio'}>Ohio</option>\n                    <option value={'Oklahoma'}>Oklahoma</option>\n                    <option value={'Oregon'}>Oregon</option>\n                    <option value={'Pennsylvania'}>Pennsylvania</option>\n                    <option value={'Puerto Rico'}>Puerto Rico</option>\n                    <option value={'Rhode Island'}>Rhode Island</option>\n                    <option value={'South Carolina'}>South Carolina</option>\n                    <option value={'South Dakota'}>South Dakota</option>\n                    <option value={'Tennessee'}>Tennessee</option>\n                    <option value={'Texas'}>Texas</option>\n                    <option value={'U.S. Virgin Islands'}>U.S. Virgin Islands</option>\n                    <option value={'Utah'}>Utah</option>\n                    <option value={'Vermont'}>Vermont</option>\n                    <option value={'Virginia'}>Virginia</option>\n                    <option value={'Washington'}>Washington</option>\n                    <option value={'West Virginia'}>West Virginia</option>\n                    <option value={'Wisconsin'}>Wisconsin</option>\n                    <option value={'Wyoming'}>Wyoming</option>\n                </Select>\n            </FormControl>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel ref={inputLabel} htmlFor=\"outlined-age-native-simple\">\n                    Ethnicity\n                </InputLabel>\n                <Select\n                    native\n                    value={state.year}\n                    onChange={props.handleChange('ethnicity')}\n                    labelWidth={labelWidth}\n                    inputProps={{\n                        name: 'ethnicity',\n                        id: 'outlined-age-native-simple',\n                    }}\n                >\n                    <option value={\"Hispanic/Latino\"}>\"Hispanic/Latino\"</option>\n                    <option value={\"American Indian/Alaskan Native\"}>\"American Indian/Alaskan Native\"</option>\n                    <option value={\"Asian\"}>\"Asian\"</option>\n                    <option value={\"Black/African American\"}>\"Black/African American\"</option>\n                    <option value={\"Native Hawaiian/Other Pacific Islander\"}>\"Native Hawaiian/Other Pacific Islander\"</option>\n                    <option value={\"White\"}>\"White\"</option>\n                </Select>\n            </FormControl>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel ref={inputLabel} htmlFor=\"outlined-age-native-simple\">\n                    Section\n                </InputLabel>\n                <Select\n                    native\n                    value={state.subReport}\n                    onChange={props.handleChange('subReport')}\n                    labelWidth={labelWidth}\n                    inputProps={{\n                        name: 'subReport',\n                        id: 'outlined-age-native-simple',\n                    }}\n                >\n                    <option value={'One PPR'}>One PPR (All)</option>\n                    <option value={'PADD'}>PADD</option>\n                    <option value={'PAAT'}>PAAT</option>\n                    <option value={'PATBI'}>PATBI</option>\n                    <option value={'PAVA'}>PAVA</option>\n                </Select>\n            </FormControl>\n        </div>\n    );\n}","import React, { PureComponent } from 'react';\nimport {\n    BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nexport function GraphSpace(props) {\n\n    if (props.data != undefined) {\n\n        let vals = [];\n        let years = [];\n\n        console.log(years)\n\n        if (props.subReport == 'One PPR') {\n            switch (props.ethnicity) {\n                case \"Hispanic/Latino\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PADD.I1.val +\n                            props.data[i].PAAT.I1.val +\n                            props.data[i].PATBI.I1.val +\n                            props.data[i].PAVA.I1.val\n                        )\n                    }\n                    break\n                case \"American Indian/Alaskan Native\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PADD.I2.val +\n                            props.data[i].PAAT.I2.val +\n                            props.data[i].PATBI.I2.val +\n                            props.data[i].PAVA.I2.val\n                        )\n                    }\n                    break\n                case \"Asian\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PADD.I3.val +\n                            props.data[i].PAAT.I3.val +\n                            props.data[i].PATBI.I3.val +\n                            props.data[i].PAVA.I3.val\n                        )\n                    }\n                    break\n                case \"Black/African American\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PADD.I4.val +\n                            props.data[i].PAAT.I4.val +\n                            props.data[i].PATBI.I4.val +\n                            props.data[i].PAVA.I4.val\n                        )\n                    }\n                    break\n                case \"Native Hawaiian/Other Pacific Islander\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PADD.I5.val +\n                            props.data[i].PAAT.I5.val +\n                            props.data[i].PATBI.I5.val +\n                            props.data[i].PAVA.I5.val\n                        )\n                    }\n                    break\n                case \"White\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PADD.I6.val +\n                            props.data[i].PAAT.I6.val +\n                            props.data[i].PATBI.I6.val +\n                            props.data[i].PAVA.I6.val\n                        )\n                    }\n                    break\n            }\n        }\n        if (props.subReport == 'PAAT') {\n            switch (props.ethnicity) {\n                case \"Hispanic/Latino\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PAAT.I1.val\n                        )\n                    }\n                    break\n                case \"American Indian/Alaskan Native\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PAAT.I2.val\n                        )\n                    }\n                    break\n                case \"Asian\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PAAT.I3.val\n                        )\n                    }\n                    break\n                case \"Black/African American\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PAAT.I4.val\n                        )\n                    }\n                    break\n                case \"Native Hawaiian/Other Pacific Islander\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PAAT.I5.val\n                        )\n                    }\n                    break\n                case \"White\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PAAT.I6.val\n                        )\n                    }\n                    break\n            }\n        }\n        if (props.subReport == 'PADD') {\n            switch (props.ethnicity) {\n                case \"Hispanic/Latino\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PADD.I1.val\n                        )\n                    }\n                    break\n                case \"American Indian/Alaskan Native\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PADD.I2.val\n                        )\n                    }\n                    break\n                case \"Asian\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PADD.I3.val\n                        )\n                    }\n                    break\n                case \"Black/African American\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PADD.I4.val\n                        )\n                    }\n                    break\n                case \"Native Hawaiian/Other Pacific Islander\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PADD.I5.val\n                        )\n                    }\n                    break\n                case \"White\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PADD.I6.val\n                        )\n                    }\n                    break\n            }\n        }\n        if (props.subReport == 'PATBI') {\n            switch (props.ethnicity) {\n                case \"Hispanic/Latino\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PATBI.I1.val\n                        )\n                    }\n                    break\n                case \"American Indian/Alaskan Native\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PATBI.I2.val\n                        )\n                    }\n                    break\n                case \"Asian\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PATBI.I3.val\n                        )\n                    }\n                    break\n                case \"Black/African American\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PATBI.I4.val\n                        )\n                    }\n                    break\n                case \"Native Hawaiian/Other Pacific Islander\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PATBI.I5.val\n                        )\n                    }\n                    break\n                case \"White\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PATBI.I6.val\n                        )\n                    }\n                    break\n            }\n        }\n        if (props.subReport == 'PAVA') {\n            switch (props.ethnicity) {\n                case \"Hispanic/Latino\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PAVA.I1.val\n                        )\n                    }\n                    break\n                case \"American Indian/Alaskan Native\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PAVA.I2.val\n                        )\n                    }\n                    break\n                case \"Asian\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PAVA.I3.val\n                        )\n                    }\n                    break\n                case \"Black/African American\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PAVA.I4.val\n                        )\n                    }\n                    break\n                case \"Native Hawaiian/Other Pacific Islander\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PAVA.I5.val\n                        )\n                    }\n                    break\n                case \"White\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PAVA.I6.val\n                        )\n                    }\n                    break\n            }\n        }\n\n        const graphData = []\n\n        for (let j = 0; j < vals.length; j++) {\n            graphData.push(\n                { 'year': years[j], 'Count': vals[j] }\n            )\n        }\n\n        function compare(obj1, obj2){\n            const a = obj1.year;\n            const b = obj2.year;\n            let comparison = 0;\n            if (a > b){\n                comparison = 1;\n            } else if (a < b){\n                comparison = -1;\n            }\n            return comparison;\n        }\n\n        graphData.sort(compare)\n\n        return (\n            <div id='graphSpace'>\n                <BarChart\n                    width={700}\n                    height={400}\n                    data={graphData}\n                    margin={{\n                        top: 5, right: 30, left: 20, bottom: 5,\n                    }}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"year\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Bar dataKey=\"Count\" fill=\"#8884d8\" />\n                </BarChart>\n            </div>\n        )\n    } else {\n        return (\n            <h1>Loading...</h1>\n        )\n    }\n}","import React, { useEffect } from 'react';\nimport DataTable from 'react-data-table-component';\n\nexport function TableSpace(props) {\n\n    const graphData = []\n    const columns = [\n        \n        {\n            name: 'Year',\n            selector: 'Year',\n            sortable: true,\n        },\n        {\n            name: 'Count',\n            selector: 'Count',\n            sortable: true,\n        }\n    ];\n\n    if (props.data != undefined) {\n\n        //format data for use in chart\n        let vals = [];\n        let years = [];\n\n        console.log(years)\n\n        if (props.subReport == 'One PPR') {\n            switch (props.ethnicity) {\n                case \"Hispanic/Latino\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PADD.I1.val +\n                            props.data[i].PAAT.I1.val +\n                            props.data[i].PATBI.I1.val +\n                            props.data[i].PAVA.I1.val\n                        )\n                    }\n                    break\n                case \"American Indian/Alaskan Native\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PADD.I2.val +\n                            props.data[i].PAAT.I2.val +\n                            props.data[i].PATBI.I2.val +\n                            props.data[i].PAVA.I2.val\n                        )\n                    }\n                    break\n                case \"Asian\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PADD.I3.val +\n                            props.data[i].PAAT.I3.val +\n                            props.data[i].PATBI.I3.val +\n                            props.data[i].PAVA.I3.val\n                        )\n                    }\n                    break\n                case \"Black/African American\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PADD.I4.val +\n                            props.data[i].PAAT.I4.val +\n                            props.data[i].PATBI.I4.val +\n                            props.data[i].PAVA.I4.val\n                        )\n                    }\n                    break\n                case \"Native Hawaiian/Other Pacific Islander\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PADD.I5.val +\n                            props.data[i].PAAT.I5.val +\n                            props.data[i].PATBI.I5.val +\n                            props.data[i].PAVA.I5.val\n                        )\n                    }\n                    break\n                case \"White\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PADD.I6.val +\n                            props.data[i].PAAT.I6.val +\n                            props.data[i].PATBI.I6.val +\n                            props.data[i].PAVA.I6.val\n                        )\n                    }\n                    break\n            }\n        }\n        if (props.subReport == 'PAAT') {\n            switch (props.ethnicity) {\n                case \"Hispanic/Latino\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PAAT.I1.val\n                        )\n                    }\n                    break\n                case \"American Indian/Alaskan Native\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PAAT.I2.val\n                        )\n                    }\n                    break\n                case \"Asian\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PAAT.I3.val\n                        )\n                    }\n                    break\n                case \"Black/African American\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PAAT.I4.val\n                        )\n                    }\n                    break\n                case \"Native Hawaiian/Other Pacific Islander\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PAAT.I5.val\n                        )\n                    }\n                    break\n                case \"White\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PAAT.I6.val\n                        )\n                    }\n                    break\n            }\n        }\n        if (props.subReport == 'PADD') {\n            switch (props.ethnicity) {\n                case \"Hispanic/Latino\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PADD.I1.val\n                        )\n                    }\n                    break\n                case \"American Indian/Alaskan Native\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PADD.I2.val\n                        )\n                    }\n                    break\n                case \"Asian\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PADD.I3.val\n                        )\n                    }\n                    break\n                case \"Black/African American\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PADD.I4.val\n                        )\n                    }\n                    break\n                case \"Native Hawaiian/Other Pacific Islander\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PADD.I5.val\n                        )\n                    }\n                    break\n                case \"White\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PADD.I6.val\n                        )\n                    }\n                    break\n            }\n        }\n        if (props.subReport == 'PATBI') {\n            switch (props.ethnicity) {\n                case \"Hispanic/Latino\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PATBI.I1.val\n                        )\n                    }\n                    break\n                case \"American Indian/Alaskan Native\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PATBI.I2.val\n                        )\n                    }\n                    break\n                case \"Asian\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PATBI.I3.val\n                        )\n                    }\n                    break\n                case \"Black/African American\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PATBI.I4.val\n                        )\n                    }\n                    break\n                case \"Native Hawaiian/Other Pacific Islander\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PATBI.I5.val\n                        )\n                    }\n                    break\n                case \"White\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PATBI.I6.val\n                        )\n                    }\n                    break\n            }\n        }\n        if (props.subReport == 'PAVA') {\n            switch (props.ethnicity) {\n                case \"Hispanic/Latino\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PAVA.I1.val\n                        )\n                    }\n                    break\n                case \"American Indian/Alaskan Native\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PAVA.I2.val\n                        )\n                    }\n                    break\n                case \"Asian\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PAVA.I3.val\n                        )\n                    }\n                    break\n                case \"Black/African American\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PAVA.I4.val\n                        )\n                    }\n                    break\n                case \"Native Hawaiian/Other Pacific Islander\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PAVA.I5.val\n                        )\n                    }\n                    break\n                case \"White\":\n                    for (let i = 0; i < props.length; i++) {\n                        years.push(props.data[i].year);\n                        vals.push(\n                            props.data[i].PAVA.I6.val\n                        )\n                    }\n                    break\n            }\n        }\n\n        for (let j = 0; j < vals.length; j++) {\n            graphData.push(\n                { 'Year': years[j], 'Count': vals[j] }\n            )\n        }\n\n        function compare(obj1, obj2){\n            const a = obj1.Year;\n            const b = obj2.Year;\n            let comparison = 0;\n            if (a > b){\n                comparison = 1;\n            } else if (a < b){\n                comparison = -1;\n            }\n            return comparison;\n        }\n\n        graphData.sort(compare)\n\n        return (\n            <div id='tableSpace'>\n                <DataTable\n                    columns={columns}\n                    data={graphData}\n                    pagination\n                />\n            </div>\n        )\n    } else {\n        return (\n            <div>loading</div>\n        )\n    }\n\n}","import React, { useState } from \"react\";\nimport { GraphSpace } from './GraphSpace';\nimport { TableSpace } from './TableSpace';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nexport function GraphTab(props) {\n  const [currentTab, setCurrentTab] = useState(0);\n\n  const handleChangeTab = (event, newTab) => {\n    setCurrentTab(newTab);\n  };\n\n  return (\n    <div>\n      <Tabs\n        value={currentTab}\n        onChange={handleChangeTab}\n        indicatorColor=\"primary\"\n      >\n        <Tab label=\"Graph\" />\n        <Tab label=\"Data\" />\n      </Tabs>\n      <TabPanel value={currentTab} index={0}>\n        <GraphSpace data={props.data} ethnicity={props.ethnicity} jurisdiction={props.jurisdiction} subReport={props.subReport} length={props.length} />\n      </TabPanel>\n      <TabPanel value={currentTab} index={1}>\n        <TableSpace data={props.data} ethnicity={props.ethnicity} jurisdiction={props.jurisdiction} subReport={props.subReport} length={props.length} />\n      </TabPanel>\n    </div>\n  )\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Container } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport { FilterSpace } from './FilterSpace';\nimport { GraphTab } from './GraphTab';\nimport Context from '../../globalStore/context';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n  },\n  header: {\n    marginBottom: theme.spacing(2),\n  },\n  filter: {\n    marginTop: theme.spacing(3),\n  },\n  results: {\n    marginTop: theme.spacing(6),\n  },\n}));\n\nfunction DataPage() {\n\n  const { state, actions } = useContext(Context);\n  const [filterState, setFilterState] = useState({\n    jurisdiction: 'Alabama',\n    subReport: 'One PPR', \n    ethnicity: 'Hispanic/Latino'\n  });\n  const [filteredData, setFilteredData] = useState();\n  const [propLength, setPropLength] = useState();\n  const classes = useStyles();\n\n  //function for the filters\n  const handleChange = name => event => {\n    setFilterState({\n      ...filterState,\n      [name]: event.target.value,\n    })\n  };\n\n  function filterData() {\n    let filtData = []\n    for (let i = 0; i < state.length; i++) {\n      if (state[i].jurisdiction == filterState.jurisdiction) {\n        filtData.push(state[i])\n      }\n    }\n    setFilteredData(filtData)\n    setPropLength(filtData.length)\n  }\n\n  useEffect(() => {\n    filterData();\n  }, [filterState])\n  \n\n  return (\n    <Page className={classes.root} title=\"DRDP - Ethnicity Ratios\">\n      <Container maxWidth=\"lg\">\n        <Header className={classes.header} />\n        <FilterSpace handleChange={handleChange} />\n        <div id='tabSpace'>\n          <GraphTab data={filteredData} ethnicity={filterState.ethnicity} jurisdiction={filterState.jurisdiction} subReport={filterState.subReport} length={propLength}/>\n        </div>\n      </Container>\n    </Page>\n  );\n}\n\nexport default DataPage;\n"],"sourceRoot":""}