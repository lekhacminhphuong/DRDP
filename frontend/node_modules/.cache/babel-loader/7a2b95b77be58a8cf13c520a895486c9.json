{"ast":null,"code":"var _jsxFileName = \"/Users/phuongle/Documents/Internship/Klavins Lab/project-dashboard/src/views/Overview/Notifications.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport uuid from 'uuid/v1';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, IconButton, List, ListItem, ListItemIcon, ListItemSecondaryAction, ListItemText, Typography, Tooltip } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForwardOutlined';\nimport PaymentIcon from '@material-ui/icons/PaymentOutlined';\nimport MailIcon from '@material-ui/icons/MailOutlineOutlined';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  value: {\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  type: {\n    fontWeight: theme.typography.fontWeightMedium\n  }\n}));\nconst notifications = [{\n  id: uuid(),\n  value: 6,\n  type: 'invite',\n  message: 'to send service quotes'\n}, {\n  id: uuid(),\n  value: 2,\n  type: 'message',\n  message: 'from clients'\n}, {\n  id: uuid(),\n  value: 1,\n  type: 'payout',\n  message: 'that needs your confirmation'\n}];\nconst icons = {\n  invite: /*#__PURE__*/React.createElement(SendIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }),\n  message: /*#__PURE__*/React.createElement(MailIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }\n  }),\n  payout: /*#__PURE__*/React.createElement(PaymentIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  })\n};\n\nfunction Notifications({\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, notifications.map((notification, i) => /*#__PURE__*/React.createElement(ListItem, {\n    divider: i < notifications.length - 1,\n    key: notification.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, icons[notification.type]), /*#__PURE__*/React.createElement(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, notification.value), ' ', /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, notification.type, \"s\"), ' ', notification.message)), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"View\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"end\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ArrowForwardIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }))))))));\n}\n\nNotifications.propTypes = {\n  className: PropTypes.string\n};\nexport default Notifications;","map":{"version":3,"sources":["/Users/phuongle/Documents/Internship/Klavins Lab/project-dashboard/src/views/Overview/Notifications.js"],"names":["React","PropTypes","clsx","uuid","makeStyles","Card","IconButton","List","ListItem","ListItemIcon","ListItemSecondaryAction","ListItemText","Typography","Tooltip","SendIcon","ArrowForwardIcon","PaymentIcon","MailIcon","useStyles","theme","root","value","fontWeight","typography","fontWeightMedium","type","notifications","id","message","icons","invite","payout","Notifications","className","rest","classes","map","notification","i","length","propTypes","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport uuid from 'uuid/v1';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  Typography,\n  Tooltip\n} from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForwardOutlined';\nimport PaymentIcon from '@material-ui/icons/PaymentOutlined';\nimport MailIcon from '@material-ui/icons/MailOutlineOutlined';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  value: {\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  type: {\n    fontWeight: theme.typography.fontWeightMedium\n  }\n}));\n\nconst notifications = [\n  {\n    id: uuid(),\n    value: 6,\n    type: 'invite',\n    message: 'to send service quotes'\n  },\n  {\n    id: uuid(),\n    value: 2,\n    type: 'message',\n    message: 'from clients'\n  },\n  {\n    id: uuid(),\n    value: 1,\n    type: 'payout',\n    message: 'that needs your confirmation'\n  }\n];\n\nconst icons = {\n  invite: <SendIcon />,\n  message: <MailIcon />,\n  payout: <PaymentIcon />\n};\n\nfunction Notifications({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <List>\n        {notifications.map((notification, i) => (\n          <ListItem\n            divider={i < notifications.length - 1}\n            key={notification.id}\n          >\n            <ListItemIcon>{icons[notification.type]}</ListItemIcon>\n            <ListItemText>\n              <Typography variant=\"body1\">\n                <span className={classes.value}>{notification.value}</span>\n                {' '}\n                <span className={classes.type}>\n                  {notification.type}\n                  s\n                </span>\n                {' '}\n                {notification.message}\n              </Typography>\n            </ListItemText>\n            <ListItemSecondaryAction>\n              <Tooltip title=\"View\">\n                <IconButton\n                  edge=\"end\"\n                  size=\"small\"\n                >\n                  <ArrowForwardIcon />\n                </IconButton>\n              </Tooltip>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n    </Card>\n  );\n}\n\nNotifications.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Notifications;\n"]},"metadata":{},"sourceType":"module"}