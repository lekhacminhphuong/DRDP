{"ast":null,"code":"var _jsxFileName = \"/Users/phuongle/Documents/Internship/Klavins Lab/project-dashboard/src/views/DashboardAnalytics/EarningsSegmentation/Chart.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Doughnut } from 'react-chartjs-2';\nimport { makeStyles, useTheme } from '@material-ui/styles';\nconst useStyles = makeStyles(() => ({\n  root: {\n    position: 'relative'\n  }\n}));\n\nfunction Chart({\n  data: dataProp,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const data = {\n    datasets: [{\n      data: [],\n      backgroundColor: [],\n      borderWidth: 8,\n      borderColor: theme.palette.common.white,\n      hoverBorderColor: theme.palette.common.white\n    }],\n    labels: []\n  };\n\n  for (const item of dataProp) {\n    data.datasets[0].data.push(item.value);\n    data.datasets[0].backgroundColor.push(item.color);\n    data.labels.push(item.label);\n  }\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cutoutPercentage: 80,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      caretSize: 10,\n      yPadding: 20,\n      xPadding: 20,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.common.white,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary,\n      callbacks: {\n        label: function (tooltipItem, data) {\n          const label = data['labels'][tooltipItem['index']];\n          const value = data['datasets'][0]['data'][tooltipItem['index']];\n          return `${label}: ${value}%`;\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Doughnut, {\n    data: data,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }));\n}\n\nChart.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.array.isRequired\n};\nexport default Chart;","map":{"version":3,"sources":["/Users/phuongle/Documents/Internship/Klavins Lab/project-dashboard/src/views/DashboardAnalytics/EarningsSegmentation/Chart.js"],"names":["React","PropTypes","clsx","Doughnut","makeStyles","useTheme","useStyles","root","position","Chart","data","dataProp","className","rest","classes","theme","datasets","backgroundColor","borderWidth","borderColor","palette","common","white","hoverBorderColor","labels","item","push","value","color","label","options","responsive","maintainAspectRatio","animation","cutoutPercentage","legend","display","layout","padding","tooltips","enabled","mode","intersect","caretSize","yPadding","xPadding","divider","titleFontColor","text","primary","bodyFontColor","secondary","footerFontColor","callbacks","tooltipItem","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Doughnut } from 'react-chartjs-2';\nimport { makeStyles, useTheme } from '@material-ui/styles';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    position: 'relative'\n  }\n}));\n\nfunction Chart({ data: dataProp, className, ...rest }) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        data: [],\n        backgroundColor: [],\n        borderWidth: 8,\n        borderColor: theme.palette.common.white,\n        hoverBorderColor: theme.palette.common.white\n      }\n    ],\n    labels: []\n  };\n\n  for (const item of dataProp) {\n    data.datasets[0].data.push(item.value);\n    data.datasets[0].backgroundColor.push(item.color);\n    data.labels.push(item.label);\n  }\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cutoutPercentage: 80,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      caretSize: 10,\n      yPadding: 20,\n      xPadding: 20,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.common.white,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary,\n      callbacks: {\n        label: function(tooltipItem, data) {\n          const label = data['labels'][tooltipItem['index']];\n          const value = data['datasets'][0]['data'][tooltipItem['index']];\n\n          return `${label}: ${value}%`;\n        }\n      }\n    }\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Doughnut\n        data={data}\n        options={options}\n      />\n    </div>\n  );\n}\n\nChart.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.array.isRequired\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}