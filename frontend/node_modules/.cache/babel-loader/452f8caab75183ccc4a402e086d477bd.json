{"ast":null,"code":"var _jsxFileName = \"/Users/josh/Desktop/use-capstone/DRDP/frontend/src/components/GraphSpace.js\";\nimport React, { Component } from 'react';\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTooltip } from 'victory';\nimport mockupdata from \"../mockupdata\"; // render every component for the website\n\nexport default class GraphSpace extends Component {\n  render() {\n    console.log('graph space says:');\n    console.log('graph space says:');\n    return React.createElement(\"div\", {\n      id: \"graphSpace\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"graph space\"), React.createElement(\"div\", {\n      style: {\n        width: 700\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(VictoryChart, {\n      domainPadding: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(VictoryBar, {\n      barRatio: 25,\n      data: mockupdata //tooltip\n      ,\n      labels: ({\n        datum\n      }) => `${datum.ansIntVal}`,\n      labelComponent: React.createElement(VictoryTooltip, {\n        dy: 0,\n        centerOffset: {\n          x: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }) // data accessor for x values\n      ,\n      x: \"Fiscal Year\" // data accessor for y values\n      ,\n      y: \"Total individuals served\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(VictoryAxis // tickValues specifies both the number of ticks and where\n    // they are placed on the axis\n    , {\n      tickValues: [2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018],\n      tickFormat: ['2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018'],\n      label: 'year',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(VictoryAxis, {\n      dependentAxis: true // tickFormat specifies how ticks should be displayed\n      ,\n      domain: [0, 70],\n      fixLabelOverlap: true //tickFormat={(x) => (`${x}`)}\n      // label={'Total Served'}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/josh/Desktop/use-capstone/DRDP/frontend/src/components/GraphSpace.js"],"names":["React","Component","VictoryBar","VictoryChart","VictoryAxis","VictoryTooltip","mockupdata","GraphSpace","render","console","log","width","datum","ansIntVal","x"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,YAArB,EAAmCC,WAAnC,EAAgDC,cAAhD,QAAsE,SAAtE;AACA,OAAOC,UAAP,MAAuB,eAAvB,C,CAEA;;AACA,eAAe,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AAE9CO,EAAAA,MAAM,GAAG;AAELC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEA,WACI;AAAK,MAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AAAc,MAAA,aAAa,EAAE,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,UAAD;AACI,MAAA,QAAQ,EAAE,EADd;AAEI,MAAA,IAAI,EAAEL,UAFV,CAGI;AAHJ;AAII,MAAA,MAAM,EAAE,CAAC;AAAEM,QAAAA;AAAF,OAAD,KAAgB,GAAEA,KAAK,CAACC,SAAU,EAJ9C;AAKI,MAAA,cAAc,EAAE,oBAAC,cAAD;AAAgB,QAAA,EAAE,EAAE,CAApB;AAAuB,QAAA,YAAY,EAAE;AAAEC,UAAAA,CAAC,EAAE;AAAL,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALpB,CAMI;AANJ;AAOI,MAAA,CAAC,EAAC,aAPN,CAQI;AARJ;AASI,MAAA,CAAC,EAAC,0BATN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAaI,oBAAC,WAAD,CACI;AACA;AAFJ;AAGI,MAAA,UAAU,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,CAHhB;AAII,MAAA,UAAU,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,MAAzC,EAAiD,MAAjD,EAAyD,MAAzD,CAJhB;AAKI,MAAA,KAAK,EAAE,MALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,EAoBI,oBAAC,WAAD;AACI,MAAA,aAAa,MADjB,CAEI;AAFJ;AAGI,MAAA,MAAM,EAAE,CAAC,CAAD,EAAI,EAAJ,CAHZ;AAII,MAAA,eAAe,EAAE,IAJrB,CAKI;AACA;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBJ,CADJ,CAFJ,CADJ;AAoCH;;AA3C6C","sourcesContent":["import React, { Component } from 'react';\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTooltip } from 'victory';\nimport mockupdata from \"../mockupdata\"; \n\n// render every component for the website\nexport default class GraphSpace extends Component {\n\n    render() {\n\n        console.log('graph space says:');\n        console.log('graph space says:');\n\n        return (\n            <div id=\"graphSpace\">\n                <p>graph space</p>\n                <div style={{ width: 700 }}>\n                    <VictoryChart domainPadding={20}>\n                        \n                        <VictoryBar\n                            barRatio={25}\n                            data={mockupdata}\n                            //tooltip\n                            labels={({ datum }) => `${datum.ansIntVal}`}\n                            labelComponent={<VictoryTooltip dy={0} centerOffset={{ x: 0 }} />}\n                            // data accessor for x values\n                            x=\"Fiscal Year\"\n                            // data accessor for y values\n                            y=\"Total individuals served\"\n                        />\n                        <VictoryAxis\n                            // tickValues specifies both the number of ticks and where\n                            // they are placed on the axis\n                            tickValues={[2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018]}\n                            tickFormat={['2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018']}\n                            label={'year'}\n                        />\n                        <VictoryAxis\n                            dependentAxis\n                            // tickFormat specifies how ticks should be displayed\n                            domain={[0, 70]}\n                            fixLabelOverlap={true}\n                            //tickFormat={(x) => (`${x}`)}\n                            // label={'Total Served'}\n                        />\n                    </VictoryChart>\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}