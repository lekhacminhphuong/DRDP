{"ast":null,"code":"import _classCallCheck from\"/Users/josh/Desktop/use-capstone/DRDP/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/josh/Desktop/use-capstone/DRDP/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/josh/Desktop/use-capstone/DRDP/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/josh/Desktop/use-capstone/DRDP/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/josh/Desktop/use-capstone/DRDP/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import data from'../mockupdata.json';import{VictoryBar,VictoryChart,VictoryAxis,VictoryTooltip}from'victory';// render every component for the website\nvar GraphSpace=/*#__PURE__*/function(_Component){_inherits(GraphSpace,_Component);function GraphSpace(){_classCallCheck(this,GraphSpace);return _possibleConstructorReturn(this,_getPrototypeOf(GraphSpace).apply(this,arguments));}_createClass(GraphSpace,[{key:\"render\",value:function render(){var data=this.props.data;var years=data.map(function(d){return d['year'];});var served=data.map(function(d){return d['ansIntVal'];});//create a json object formatted for victoryChart\nvar str='[';for(var i=0;i<years.length;i++){str+='{\"year\": '+years[i]+',\"served\": '+served[i]+'},';}var str2=str.substr(0,str.length-1);str2+=\"]\";//console.log(str2);\nvar obj1=JSON.parse(str2);//console.log(\"obj1: \" + obj1);\nreturn React.createElement(\"div\",{id:\"graphSpace\"},React.createElement(\"p\",null,\"graph space\"),React.createElement(\"div\",{style:{width:500}},React.createElement(VictoryChart,{domainPadding:20},React.createElement(VictoryAxis// tickValues specifies both the number of ticks and where\n// they are placed on the axis\n,{tickValues:[2011,2012,2013,2014,2015,2016,2017,2018],tickFormat:['2011','2012','2013','2014','2015','2016','2017','2018'],label:'year'}),React.createElement(VictoryAxis,{dependentAxis:true// tickFormat specifies how ticks should be displayed\n,tickFormat:function tickFormat(x){return\"\".concat(x);},label:'Total Served'}),React.createElement(VictoryBar,{barRatio:25,data:obj1//tooltip\n,labels:function labels(_ref){var datum=_ref.datum;return\"\".concat(datum.served);},labelComponent:React.createElement(VictoryTooltip,{dy:0,centerOffset:{x:0}})// data accessor for x values\n,x:\"year\"// data accessor for y values\n,y:\"served\"}))));}}]);return GraphSpace;}(Component);export{GraphSpace as default};","map":{"version":3,"sources":["/Users/josh/Desktop/use-capstone/DRDP/frontend/src/components/GraphSpace.js"],"names":["React","Component","data","VictoryBar","VictoryChart","VictoryAxis","VictoryTooltip","GraphSpace","props","years","map","d","served","str","i","length","str2","substr","obj1","JSON","parse","width","x","datum"],"mappings":"mpBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,OAASC,UAAT,CAAqBC,YAArB,CAAmCC,WAAnC,CAAgDC,cAAhD,KAAsE,SAAtE,CAEA;GACqBC,CAAAA,U,oRAER,CAEL,GAAIL,CAAAA,IAAI,CAAG,KAAKM,KAAL,CAAWN,IAAtB,CAEA,GAAIO,CAAAA,KAAK,CAAGP,IAAI,CAACQ,GAAL,CAAS,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAAC,MAAD,CAAL,EAAV,CAAZ,CACA,GAAIC,CAAAA,MAAM,CAAGV,IAAI,CAACQ,GAAL,CAAS,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAAC,WAAD,CAAL,EAAV,CAAb,CAEA;AACA,GAAIE,CAAAA,GAAG,CAAG,GAAV,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGL,KAAK,CAACM,MAA1B,CAAkCD,CAAC,EAAnC,CAAuC,CACnCD,GAAG,EAAI,YAAcJ,KAAK,CAACK,CAAD,CAAnB,CAAyB,aAAzB,CAAyCF,MAAM,CAACE,CAAD,CAA/C,CAAqD,IAA5D,CACH,CACD,GAAIE,CAAAA,IAAI,CAAGH,GAAG,CAACI,MAAJ,CAAW,CAAX,CAAcJ,GAAG,CAACE,MAAJ,CAAa,CAA3B,CAAX,CACAC,IAAI,EAAI,GAAR,CACA;AAEA,GAAIE,CAAAA,IAAI,CAAGC,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAX,CACA;AAEA,MACI,4BAAK,EAAE,CAAC,YAAR,EACI,2CADJ,CAEI,2BAAK,KAAK,CAAE,CAAEK,KAAK,CAAE,GAAT,CAAZ,EACI,oBAAC,YAAD,EAAc,aAAa,CAAE,EAA7B,EACI,oBAAC,WACG;AACA;AAFJ,EAGI,UAAU,CAAE,CAAC,IAAD,CAAO,IAAP,CAAa,IAAb,CAAmB,IAAnB,CAAyB,IAAzB,CAA+B,IAA/B,CAAqC,IAArC,CAA2C,IAA3C,CAHhB,CAII,UAAU,CAAE,CAAC,MAAD,CAAS,MAAT,CAAiB,MAAjB,CAAyB,MAAzB,CAAiC,MAAjC,CAAyC,MAAzC,CAAiD,MAAjD,CAAyD,MAAzD,CAJhB,CAKI,KAAK,CAAE,MALX,EADJ,CAQI,oBAAC,WAAD,EACI,aAAa,KACb;AAFJ,CAGI,UAAU,CAAE,oBAACC,CAAD,kBAAWA,CAAX,GAHhB,CAII,KAAK,CAAE,cAJX,EARJ,CAcI,oBAAC,UAAD,EACI,QAAQ,CAAE,EADd,CAEI,IAAI,CAAEJ,IACN;AAHJ,CAII,MAAM,CAAE,yBAAGK,CAAAA,KAAH,MAAGA,KAAH,iBAAkBA,KAAK,CAACX,MAAxB,GAJZ,CAKI,cAAc,CAAE,oBAAC,cAAD,EAAgB,EAAE,CAAE,CAApB,CAAuB,YAAY,CAAE,CAAEU,CAAC,CAAE,CAAL,CAArC,EAGhB;AARJ,CASI,CAAC,CAAC,MACF;AAVJ,CAWI,CAAC,CAAC,QAXN,EAdJ,CADJ,CAFJ,CADJ,CAmCH,C,wBAxDmCrB,S,SAAnBM,U","sourcesContent":["import React, { Component } from 'react';\nimport data from '../mockupdata.json';\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTooltip } from 'victory';\n\n// render every component for the website\nexport default class GraphSpace extends Component {\n\n    render() {\n\n        let data = this.props.data;\n\n        let years = data.map(d => d['year']);\n        let served = data.map(d => d['ansIntVal']);\n\n        //create a json object formatted for victoryChart\n        let str = '['\n        for (let i = 0; i < years.length; i++) {\n            str += '{\"year\": ' + years[i] + ',\"served\": ' + served[i] + '},';\n        }\n        let str2 = str.substr(0, str.length - 1);\n        str2 += \"]\";\n        //console.log(str2);\n\n        let obj1 = JSON.parse(str2);\n        //console.log(\"obj1: \" + obj1);\n\n        return (\n            <div id=\"graphSpace\">\n                <p>graph space</p>\n                <div style={{ width: 500 }}>\n                    <VictoryChart domainPadding={20}>\n                        <VictoryAxis\n                            // tickValues specifies both the number of ticks and where\n                            // they are placed on the axis\n                            tickValues={[2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018]}\n                            tickFormat={['2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018']}\n                            label={'year'}\n                        />\n                        <VictoryAxis\n                            dependentAxis\n                            // tickFormat specifies how ticks should be displayed\n                            tickFormat={(x) => (`${x}`)}\n                            label={'Total Served'}\n                        />\n                        <VictoryBar\n                            barRatio={25}\n                            data={obj1}\n                            //tooltip\n                            labels={({ datum }) => `${datum.served}`}\n                            labelComponent={<VictoryTooltip dy={0} centerOffset={{ x: 0 }} />}\n\n\n                            // data accessor for x values\n                            x=\"year\"\n                            // data accessor for y values\n                            y=\"served\"\n                        />\n                    </VictoryChart>\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}