{"ast":null,"code":"var _jsxFileName = \"/Users/phuongle/Documents/Internship/Klavins Lab/project-dashboard/src/views/Overview/Todos.js\";\n\n/* eslint-disable react/no-multi-comp */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, Card, CardContent, CardHeader, Divider, IconButton, List, ListItem, ListItemIcon, ListItemText, Radio, Tooltip, Typography, colors } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport ArchiveIcon from '@material-ui/icons/ArchiveOutlined';\nimport axios from 'src/utils/axios';\nimport Label from 'src/components/Label';\n\nconst getLabel = todo => {\n  if (todo.done) {\n    return null;\n  }\n\n  if (moment(todo.deadline).isBefore(moment(), 'day')) {\n    return /*#__PURE__*/React.createElement(Label, {\n      color: colors.red[600],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, `Due ${moment(todo.deadline).fromNow()}`);\n  }\n\n  if (moment(todo.deadline).isSame(moment(), 'day')) {\n    return /*#__PURE__*/React.createElement(Label, {\n      color: colors.orange[600],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 12\n      }\n    }, \"Due today\");\n  }\n\n  return /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }\n  }, `Due ${moment(todo.deadline).fromNow()}`);\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  addIcon: {\n    marginRight: theme.spacing(1)\n  },\n  done: {\n    textDecoration: 'line-through',\n    color: theme.palette.text.secondary\n  }\n}));\n\nfunction Todos({\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n  const [todos, setTodos] = useState([]);\n\n  const handleChange = (event, todo) => {\n    event.persist();\n    setTodos(prevTodos => prevTodos.map(prevTodo => {\n      if (prevTodo.id === todo.id) {\n        return { ...todo,\n          done: !todo.done\n        };\n      }\n\n      return prevTodo;\n    }));\n  };\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchTodos = () => {\n      axios.get('/api/account/todos').then(response => {\n        if (mounted) {\n          setTodos(response.data.todos);\n        }\n      });\n    };\n\n    fetchTodos();\n    return () => {\n      mounted = false;\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(AddIcon, {\n      className: classes.addIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }), \"Add\"),\n    title: \"My todos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, todos.map((todo, i) => /*#__PURE__*/React.createElement(ListItem, {\n    divider: i < todos.length - 1,\n    key: todo.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Radio, {\n    checked: todo.done,\n    onClick: event => handleChange(event, todo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: clsx({\n      [classes.done]: todo.done\n    }),\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, todo.title)), getLabel(todo), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Archive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ArchiveIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 19\n    }\n  }))))))));\n}\n\nTodos.propTypes = {\n  className: PropTypes.string\n};\nexport default Todos;","map":{"version":3,"sources":["/Users/phuongle/Documents/Internship/Klavins Lab/project-dashboard/src/views/Overview/Todos.js"],"names":["React","useState","useEffect","PropTypes","clsx","moment","makeStyles","Button","Card","CardContent","CardHeader","Divider","IconButton","List","ListItem","ListItemIcon","ListItemText","Radio","Tooltip","Typography","colors","AddIcon","ArchiveIcon","axios","Label","getLabel","todo","done","deadline","isBefore","red","fromNow","isSame","orange","useStyles","theme","root","content","padding","addIcon","marginRight","spacing","textDecoration","color","palette","text","secondary","Todos","className","rest","classes","todos","setTodos","handleChange","event","persist","prevTodos","map","prevTodo","id","mounted","fetchTodos","get","then","response","data","i","length","title","propTypes","string"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-multi-comp */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Radio,\n  Tooltip,\n  Typography,\n  colors\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport ArchiveIcon from '@material-ui/icons/ArchiveOutlined';\nimport axios from 'src/utils/axios';\nimport Label from 'src/components/Label';\n\nconst getLabel = (todo) => {\n  if (todo.done) {\n    return null;\n  }\n\n  if (moment(todo.deadline).isBefore(moment(), 'day')) {\n    return (\n      <Label color={colors.red[600]}>\n        {\n          `Due ${moment(todo.deadline).fromNow()}`\n        }\n      </Label>\n    );\n  }\n\n  if (moment(todo.deadline).isSame(moment(), 'day')) {\n    return <Label color={colors.orange[600]}>Due today</Label>;\n  }\n\n  return <Label>{`Due ${moment(todo.deadline).fromNow()}`}</Label>;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  addIcon: {\n    marginRight: theme.spacing(1)\n  },\n  done: {\n    textDecoration: 'line-through',\n    color: theme.palette.text.secondary\n  }\n}));\n\nfunction Todos({ className, ...rest }) {\n  const classes = useStyles();\n  const [todos, setTodos] = useState([]);\n\n  const handleChange = (event, todo) => {\n    event.persist();\n\n    setTodos((prevTodos) => prevTodos.map((prevTodo) => {\n      if (prevTodo.id === todo.id) {\n        return {\n          ...todo,\n          done: !todo.done\n        };\n      }\n\n      return prevTodo;\n    }));\n  };\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchTodos = () => {\n      axios.get('/api/account/todos').then((response) => {\n        if (mounted) {\n          setTodos(response.data.todos);\n        }\n      });\n    };\n\n    fetchTodos();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        action={(\n          <Button\n            color=\"primary\"\n            size=\"small\"\n          >\n            <AddIcon className={classes.addIcon} />\n            Add\n          </Button>\n        )}\n        title=\"My todos\"\n      />\n      <Divider />\n      <CardContent className={classes.content}>\n        <List>\n          {todos.map((todo, i) => (\n            <ListItem\n              divider={i < todos.length - 1}\n              key={todo.id}\n            >\n              <ListItemIcon>\n                <Radio\n                  checked={todo.done}\n                  onClick={(event) => handleChange(event, todo)}\n                />\n              </ListItemIcon>\n              <ListItemText>\n                <Typography\n                  className={clsx({\n                    [classes.done]: todo.done\n                  })}\n                  variant=\"body1\"\n                >\n                  {todo.title}\n                </Typography>\n              </ListItemText>\n              {getLabel(todo)}\n              <Tooltip title=\"Archive\">\n                <IconButton>\n                  <ArchiveIcon />\n                </IconButton>\n              </Tooltip>\n            </ListItem>\n          ))}\n        </List>\n      </CardContent>\n    </Card>\n  );\n}\n\nTodos.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Todos;\n"]},"metadata":{},"sourceType":"module"}