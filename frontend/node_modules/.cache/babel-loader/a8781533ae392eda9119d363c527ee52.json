{"ast":null,"code":"var _jsxFileName = \"/Users/josh/Desktop/use-capstone/DRDP/frontend/src/components/GraphSpace.js\";\nimport React, { Component } from 'react';\nimport data from '../mockupdata.json';\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTooltip } from 'victory'; // render every component for the website\n\nexport default class GraphSpace extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dat: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      dat: data\n    }); //console.log(this.state.dat)   \n  }\n\n  render() {\n    let years = data.map(d => d['Fiscal Year']);\n    let served = data.map(d => d['Total individuals served']);\n    let m;\n    let str = '[';\n\n    for (let i = 0; i < years.length; i++) {\n      str += '{\"year\": ' + years[i] + ',\"served\": ' + served[i] + '},';\n    } //str[str.length - 1] = \"]\"\n\n\n    let str2 = str.substr(0, str.length - 1);\n    str2 += \"]\";\n    console.log(str2);\n    let obj1 = JSON.parse(str2); //console.log(\"obj1: \" + obj1);\n\n    return React.createElement(\"div\", {\n      id: \"graphSpace\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"graph space\"), React.createElement(\"div\", {\n      style: {\n        width: 500\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(VictoryChart, {\n      domainPadding: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(VictoryAxis // tickValues specifies both the number of ticks and where\n    // they are placed on the axis\n    , {\n      tickValues: [2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018],\n      tickFormat: ['2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018'],\n      label: 'year',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(VictoryAxis, {\n      dependentAxis: true // tickFormat specifies how ticks should be displayed\n      ,\n      tickFormat: x => `${x}`,\n      label: 'Total Served',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(VictoryBar, {\n      barRatio: 25,\n      data: obj1 //tooltip\n      ,\n      labels: ({\n        datum\n      }) => `${datum.served}`,\n      labelComponent: React.createElement(VictoryTooltip, {\n        dy: 0,\n        centerOffset: {\n          x: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }) // data accessor for x values\n      ,\n      x: \"year\" // data accessor for y values\n      ,\n      y: \"served\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/josh/Desktop/use-capstone/DRDP/frontend/src/components/GraphSpace.js"],"names":["React","Component","data","VictoryBar","VictoryChart","VictoryAxis","VictoryTooltip","GraphSpace","constructor","props","state","dat","componentDidMount","setState","render","years","map","d","served","m","str","i","length","str2","substr","console","log","obj1","JSON","parse","width","x","datum"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport data from '../mockupdata.json';\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTooltip } from 'victory';\n\n// render every component for the website\nexport default class GraphSpace extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dat: []\n        };\n    }\n\n    componentDidMount() {\n        this.setState({ dat: data })\n        //console.log(this.state.dat)   \n    }\n\n    render() {\n\n        let years = data.map(d => d['Fiscal Year']);\n        let served = data.map(d => d['Total individuals served']);\n        let m\n\n        let str = '['\n        for (let i = 0; i < years.length; i++) {\n            str += '{\"year\": ' + years[i] + ',\"served\": ' + served[i] + '},';\n        }\n        //str[str.length - 1] = \"]\"\n        let str2 = str.substr(0, str.length - 1);\n        str2 += \"]\";\n        console.log(str2);\n\n        let obj1 = JSON.parse(str2);\n        //console.log(\"obj1: \" + obj1);\n\n        return (\n            <div id=\"graphSpace\">\n                <p>graph space</p>\n                <div style={{ width: 500 }}>\n                    <VictoryChart domainPadding={20}>\n                        <VictoryAxis\n                            // tickValues specifies both the number of ticks and where\n                            // they are placed on the axis\n                            tickValues={[2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018]}\n                            tickFormat={['2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018']}\n                            label={'year'}\n                        />\n                        <VictoryAxis\n                            dependentAxis\n                            // tickFormat specifies how ticks should be displayed\n                            tickFormat={(x) => (`${x}`)}\n                            label={'Total Served'}\n                        />\n                        <VictoryBar\n                            barRatio={25}\n                            data={obj1}\n                            //tooltip\n                            labels={({ datum }) => `${datum.served}`}\n                            labelComponent={<VictoryTooltip dy={0} centerOffset={{ x: 0 }} />}\n\n\n                            // data accessor for x values\n                            x=\"year\"\n                            // data accessor for y values\n                            y=\"served\"\n                        />\n                    </VictoryChart>\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}