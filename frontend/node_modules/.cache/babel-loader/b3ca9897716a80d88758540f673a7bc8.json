{"ast":null,"code":"(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-]+[\\s\\S]*?(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /@[\\w-]+/ // See rest below\n\n      }\n    },\n    'url': {\n      pattern: RegExp('url\\\\((?:' + string.source + '|[^\\n\\r()]*)\\\\)', 'i'),\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/\n      }\n    },\n    'selector': RegExp('[^{}\\\\s](?:[^{};\"\\']|' + string.source + ')*?(?=\\\\s*\\\\{)'),\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n    'important': /!important\\b/i,\n    'function': /[-a-z0-9]+(?=\\()/i,\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    Prism.languages.insertBefore('inside', 'attr-value', {\n      'style-attr': {\n        pattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n        inside: {\n          'attr-name': {\n            pattern: /^\\s*style/i,\n            inside: markup.tag.inside\n          },\n          'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n          'attr-value': {\n            pattern: /.+/i,\n            inside: Prism.languages.css\n          }\n        },\n        alias: 'language-css'\n      }\n    }, markup.tag);\n  }\n})(Prism);","map":{"version":3,"sources":["/Users/phuongle/Documents/newFrontEnd/node_modules/prismjs/components/prism-css.js"],"names":["Prism","string","languages","css","pattern","inside","RegExp","source","greedy","rest","markup","tag","addInlined","insertBefore","alias"],"mappings":"AAAC,WAAUA,KAAV,EAAiB;AAEjB,MAAIC,MAAM,GAAG,+CAAb;AAEAD,EAAAA,KAAK,CAACE,SAAN,CAAgBC,GAAhB,GAAsB;AACrB,eAAW,kBADU;AAErB,cAAU;AACTC,MAAAA,OAAO,EAAE,gCADA;AAETC,MAAAA,MAAM,EAAE;AACP,gBAAQ,SADD,CAEP;;AAFO;AAFC,KAFW;AASrB,WAAO;AACND,MAAAA,OAAO,EAAEE,MAAM,CAAC,cAAcL,MAAM,CAACM,MAArB,GAA8B,iBAA/B,EAAkD,GAAlD,CADT;AAENF,MAAAA,MAAM,EAAE;AACP,oBAAY,OADL;AAEP,uBAAe;AAFR;AAFF,KATc;AAgBrB,gBAAYC,MAAM,CAAC,0BAA0BL,MAAM,CAACM,MAAjC,GAA0C,gBAA3C,CAhBG;AAiBrB,cAAU;AACTH,MAAAA,OAAO,EAAEH,MADA;AAETO,MAAAA,MAAM,EAAE;AAFC,KAjBW;AAqBrB,gBAAY,8CArBS;AAsBrB,iBAAa,eAtBQ;AAuBrB,gBAAY,mBAvBS;AAwBrB,mBAAe;AAxBM,GAAtB;AA2BAR,EAAAA,KAAK,CAACE,SAAN,CAAgBC,GAAhB,CAAoB,QAApB,EAA8BE,MAA9B,CAAqCI,IAArC,GAA4CT,KAAK,CAACE,SAAN,CAAgBC,GAA5D;AAEA,MAAIO,MAAM,GAAGV,KAAK,CAACE,SAAN,CAAgBQ,MAA7B;;AACA,MAAIA,MAAJ,EAAY;AACXA,IAAAA,MAAM,CAACC,GAAP,CAAWC,UAAX,CAAsB,OAAtB,EAA+B,KAA/B;AAEAZ,IAAAA,KAAK,CAACE,SAAN,CAAgBW,YAAhB,CAA6B,QAA7B,EAAuC,YAAvC,EAAqD;AACpD,oBAAc;AACbT,QAAAA,OAAO,EAAE,4CADI;AAEbC,QAAAA,MAAM,EAAE;AACP,uBAAa;AACZD,YAAAA,OAAO,EAAE,YADG;AAEZC,YAAAA,MAAM,EAAEK,MAAM,CAACC,GAAP,CAAWN;AAFP,WADN;AAKP,yBAAe,uBALR;AAMP,wBAAc;AACbD,YAAAA,OAAO,EAAE,KADI;AAEbC,YAAAA,MAAM,EAAEL,KAAK,CAACE,SAAN,CAAgBC;AAFX;AANP,SAFK;AAabW,QAAAA,KAAK,EAAE;AAbM;AADsC,KAArD,EAgBGJ,MAAM,CAACC,GAhBV;AAiBA;AAED,CAxDA,EAwDCX,KAxDD,CAAD","sourcesContent":["(function (Prism) {\n\n\tvar string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-]+[\\s\\S]*?(?:;|(?=\\s*\\{))/,\n\t\t\tinside: {\n\t\t\t\t'rule': /@[\\w-]+/\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\tpattern: RegExp('url\\\\((?:' + string.source + '|[^\\n\\r()]*)\\\\)', 'i'),\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/\n\t\t\t}\n\t\t},\n\t\t'selector': RegExp('[^{}\\\\s](?:[^{};\"\\']|' + string.source + ')*?(?=\\\\s*\\\\{)'),\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n\t\t'important': /!important\\b/i,\n\t\t'function': /[-a-z0-9]+(?=\\()/i,\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\n\t\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t\t'style-attr': {\n\t\t\t\tpattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'attr-name': {\n\t\t\t\t\t\tpattern: /^\\s*style/i,\n\t\t\t\t\t\tinside: markup.tag.inside\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\tpattern: /.+/i,\n\t\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\talias: 'language-css'\n\t\t\t}\n\t\t}, markup.tag);\n\t}\n\n}(Prism));\n"]},"metadata":{},"sourceType":"script"}