{"ast":null,"code":"var _jsxFileName = \"/Users/phuongle/Documents/Internship/Klavins Lab/project-dashboard/src/components/ReviewStars.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport uuid from 'uuid/v1';\nimport { makeStyles } from '@material-ui/styles';\nimport { colors } from '@material-ui/core';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center'\n  },\n  starIcon: {\n    fontSize: 18,\n    height: 18,\n    width: 18\n  },\n  starFilledIcon: {\n    color: colors.amber[400]\n  },\n  starBorderIcon: {\n    color: theme.palette.icon\n  }\n}));\n\nfunction ReviewStars({\n  value,\n  starCount,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n  const starNodes = [];\n\n  for (let i = 1; i <= starCount; i++) {\n    const key = uuid();\n    const starNode = i <= value ? /*#__PURE__*/React.createElement(StarIcon, {\n      className: clsx(classes.starIcon, classes.starFilledIcon),\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }) : /*#__PURE__*/React.createElement(StarBorderIcon, {\n      className: clsx(classes.starIcon, classes.starBorderIcon),\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    });\n    starNodes.push(starNode);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }), starNodes);\n}\n\nReviewStars.propTypes = {\n  className: PropTypes.string,\n  starCount: PropTypes.number,\n  value: PropTypes.number\n};\nReviewStars.defaultProps = {\n  value: 0,\n  starCount: 5\n};\nexport default ReviewStars;","map":{"version":3,"sources":["/Users/phuongle/Documents/Internship/Klavins Lab/project-dashboard/src/components/ReviewStars.js"],"names":["React","PropTypes","clsx","uuid","makeStyles","colors","StarIcon","StarBorderIcon","useStyles","theme","root","display","alignItems","starIcon","fontSize","height","width","starFilledIcon","color","amber","starBorderIcon","palette","icon","ReviewStars","value","starCount","className","rest","classes","starNodes","i","key","starNode","push","propTypes","string","number","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,aADL;AAEJC,IAAAA,UAAU,EAAE;AAFR,GADiC;AAKvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE,EADF;AAERC,IAAAA,MAAM,EAAE,EAFA;AAGRC,IAAAA,KAAK,EAAE;AAHC,GAL6B;AAUvCC,EAAAA,cAAc,EAAE;AACdC,IAAAA,KAAK,EAAEb,MAAM,CAACc,KAAP,CAAa,GAAb;AADO,GAVuB;AAavCC,EAAAA,cAAc,EAAE;AACdF,IAAAA,KAAK,EAAET,KAAK,CAACY,OAAN,CAAcC;AADP;AAbuB,CAAZ,CAAD,CAA5B;;AAkBA,SAASC,WAAT,CAAqB;AACnBC,EAAAA,KADmB;AAEnBC,EAAAA,SAFmB;AAGnBC,EAAAA,SAHmB;AAInB,KAAGC;AAJgB,CAArB,EAKG;AACD,QAAMC,OAAO,GAAGpB,SAAS,EAAzB;AACA,QAAMqB,SAAS,GAAG,EAAlB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIL,SAArB,EAAgCK,CAAC,EAAjC,EAAqC;AACnC,UAAMC,GAAG,GAAG5B,IAAI,EAAhB;AAEA,UAAM6B,QAAQ,GAAGF,CAAC,IAAIN,KAAL,gBACf,oBAAC,QAAD;AACE,MAAA,SAAS,EAAEtB,IAAI,CAAC0B,OAAO,CAACf,QAAT,EAAmBe,OAAO,CAACX,cAA3B,CADjB;AAEE,MAAA,GAAG,EAAEc,GAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADe,gBAMf,oBAAC,cAAD;AACE,MAAA,SAAS,EAAE7B,IAAI,CAAC0B,OAAO,CAACf,QAAT,EAAmBe,OAAO,CAACR,cAA3B,CADjB;AAEE,MAAA,GAAG,EAAEW,GAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF;AAYAF,IAAAA,SAAS,CAACI,IAAV,CAAeD,QAAf;AACD;;AAED,sBACE,6CACML,IADN;AAEE,IAAA,SAAS,EAAEzB,IAAI,CAAC0B,OAAO,CAAClB,IAAT,EAAegB,SAAf,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIGG,SAJH,CADF;AAQD;;AAEDN,WAAW,CAACW,SAAZ,GAAwB;AACtBR,EAAAA,SAAS,EAAEzB,SAAS,CAACkC,MADC;AAEtBV,EAAAA,SAAS,EAAExB,SAAS,CAACmC,MAFC;AAGtBZ,EAAAA,KAAK,EAAEvB,SAAS,CAACmC;AAHK,CAAxB;AAMAb,WAAW,CAACc,YAAZ,GAA2B;AACzBb,EAAAA,KAAK,EAAE,CADkB;AAEzBC,EAAAA,SAAS,EAAE;AAFc,CAA3B;AAKA,eAAeF,WAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport uuid from 'uuid/v1';\nimport { makeStyles } from '@material-ui/styles';\nimport { colors } from '@material-ui/core';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center'\n  },\n  starIcon: {\n    fontSize: 18,\n    height: 18,\n    width: 18\n  },\n  starFilledIcon: {\n    color: colors.amber[400]\n  },\n  starBorderIcon: {\n    color: theme.palette.icon\n  }\n}));\n\nfunction ReviewStars({\n  value,\n  starCount,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n  const starNodes = [];\n\n  for (let i = 1; i <= starCount; i++) {\n    const key = uuid();\n\n    const starNode = i <= value ? (\n      <StarIcon\n        className={clsx(classes.starIcon, classes.starFilledIcon)}\n        key={key}\n      />\n    ) : (\n      <StarBorderIcon\n        className={clsx(classes.starIcon, classes.starBorderIcon)}\n        key={key}\n      />\n    );\n\n    starNodes.push(starNode);\n  }\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {starNodes}\n    </div>\n  );\n}\n\nReviewStars.propTypes = {\n  className: PropTypes.string,\n  starCount: PropTypes.number,\n  value: PropTypes.number\n};\n\nReviewStars.defaultProps = {\n  value: 0,\n  starCount: 5\n};\n\nexport default ReviewStars;\n"]},"metadata":{},"sourceType":"module"}