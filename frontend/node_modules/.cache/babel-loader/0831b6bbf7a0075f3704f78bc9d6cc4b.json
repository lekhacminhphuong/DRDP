{"ast":null,"code":"var _jsxFileName = \"/Users/phuongle/Documents/Internship/Klavins Lab/project-dashboard/src/views/ProjectCreate/AboutAuthor.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardHeader, CardContent, Typography, Radio, colors } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-start',\n    padding: theme.spacing(2),\n    maxWidth: 560,\n    '& + &': {\n      marginTop: theme.spacing(2)\n    }\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[50]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  optionDetails: {\n    marginLeft: theme.spacing(2)\n  }\n}));\nconst options = [{\n  value: 'freelancer',\n  title: 'I\\'m a freelancer',\n  description: 'I\\'m looking for teamates to join in a personal project'\n}, {\n  value: 'projectOwner',\n  title: 'I’m a project owner',\n  description: 'I\\'m looking for freelancer or contractors to take care of my project'\n}, {\n  value: 'affiliate',\n  title: 'I want to join affiliate',\n  description: 'I\\'m looking for freelancer or contractors to take care of my project'\n}];\n\nfunction AboutAuthor({\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n  const [selected, setSelected] = useState(options[0].value);\n\n  const handleChange = (event, option) => {\n    setSelected(option.value);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    title: \"Who are you exactly?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, options.map(option => /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.option, {\n      [classes.selectedOption]: selected === option.value\n    }),\n    key: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Radio, {\n    checked: selected === option.value,\n    className: classes.optionRadio,\n    color: \"primary\",\n    onClick: event => handleChange(event, option),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.optionDetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, option.title), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, option.description))))));\n}\n\nAboutAuthor.propTypes = {\n  className: PropTypes.string\n};\nexport default AboutAuthor;","map":{"version":3,"sources":["/Users/phuongle/Documents/Internship/Klavins Lab/project-dashboard/src/views/ProjectCreate/AboutAuthor.js"],"names":["React","useState","PropTypes","clsx","makeStyles","Card","CardHeader","CardContent","Typography","Radio","colors","useStyles","theme","root","option","border","palette","divider","display","alignItems","padding","spacing","maxWidth","marginTop","selectedOption","backgroundColor","grey","optionRadio","margin","optionDetails","marginLeft","options","value","title","description","AboutAuthor","className","rest","classes","selected","setSelected","handleChange","event","map","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  Radio,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-start',\n    padding: theme.spacing(2),\n    maxWidth: 560,\n    '& + &': {\n      marginTop: theme.spacing(2)\n    }\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[50]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  optionDetails: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst options = [\n  {\n    value: 'freelancer',\n    title: 'I\\'m a freelancer',\n    description: 'I\\'m looking for teamates to join in a personal project'\n  },\n  {\n    value: 'projectOwner',\n    title: 'I’m a project owner',\n    description:\n      'I\\'m looking for freelancer or contractors to take care of my project'\n  },\n  {\n    value: 'affiliate',\n    title: 'I want to join affiliate',\n    description:\n      'I\\'m looking for freelancer or contractors to take care of my project'\n  }\n];\n\nfunction AboutAuthor({ className, ...rest }) {\n  const classes = useStyles();\n  const [selected, setSelected] = useState(options[0].value);\n\n  const handleChange = (event, option) => {\n    setSelected(option.value);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Who are you exactly?\" />\n      <CardContent>\n        {options.map((option) => (\n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option.value\n            })}\n            key={option.value}\n          >\n            <Radio\n              checked={selected === option.value}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={(event) => handleChange(event, option)}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option.title}\n              </Typography>\n              <Typography variant=\"body1\">{option.description}</Typography>\n            </div>\n          </div>\n        ))}\n      </CardContent>\n    </Card>\n  );\n}\n\nAboutAuthor.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutAuthor;\n"]},"metadata":{},"sourceType":"module"}