{"ast":null,"code":"var _jsxFileName = \"/Users/phuongle/Documents/Internship/Klavins Lab/project-dashboard/src/views/DashboardDefault/PerformanceOverTime/Chart.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nconst useStyles = makeStyles(() => ({\n  root: {\n    position: 'relative'\n  }\n}));\n\nfunction Chart({\n  className,\n  data: dataProp,\n  labels,\n  ...rest\n}) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = canvas => {\n    const ctx = canvas.getContext('2d');\n    const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n    gradient.addColorStop(0, fade(theme.palette.secondary.main, 0.2));\n    gradient.addColorStop(0.9, 'rgba(255,255,255,0)');\n    gradient.addColorStop(1, 'rgba(255,255,255,0)');\n    return {\n      datasets: [{\n        data: dataProp,\n        backgroundColor: gradient,\n        borderColor: theme.palette.secondary.main,\n        pointBorderColor: '#FFFFFF',\n        pointBorderWidth: 3,\n        pointRadius: 6,\n        pointBackgroundColor: theme.palette.secondary.main\n      }],\n      labels\n    };\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    scales: {\n      xAxes: [{\n        gridLines: {\n          display: false,\n          drawBorder: false\n        },\n        ticks: {\n          padding: 20,\n          fontColor: theme.palette.text.secondary\n        }\n      }],\n      yAxes: [{\n        gridLines: {\n          borderDash: [2],\n          borderDashOffset: [2],\n          color: theme.palette.divider,\n          drawBorder: false,\n          zeroLineBorderDash: [2],\n          zeroLineBorderDashOffset: [2],\n          zeroLineColor: theme.palette.divider\n        },\n        ticks: {\n          padding: 20,\n          fontColor: theme.palette.text.secondary,\n          beginAtZero: true,\n          min: 0,\n          maxTicksLimit: 7,\n          callback: value => value > 0 ? `${value}K` : value\n        }\n      }]\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      caretSize: 10,\n      yPadding: 20,\n      xPadding: 20,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.common.white,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary,\n      callbacks: {\n        title: () => {},\n        label: tooltipItem => {\n          let label = `Income: ${tooltipItem.yLabel}`;\n\n          if (tooltipItem.yLabel > 0) {\n            label += 'K';\n          }\n\n          return label;\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    data: data,\n    options: options //\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }));\n}\n\nChart.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.array.isRequired,\n  labels: PropTypes.array.isRequired\n};\nexport default Chart;","map":{"version":3,"sources":["/Users/phuongle/Documents/Internship/Klavins Lab/project-dashboard/src/views/DashboardDefault/PerformanceOverTime/Chart.js"],"names":["React","clsx","PropTypes","Line","makeStyles","useTheme","fade","useStyles","root","position","Chart","className","data","dataProp","labels","rest","classes","theme","canvas","ctx","getContext","gradient","createLinearGradient","addColorStop","palette","secondary","main","datasets","backgroundColor","borderColor","pointBorderColor","pointBorderWidth","pointRadius","pointBackgroundColor","options","responsive","maintainAspectRatio","animation","legend","display","layout","padding","scales","xAxes","gridLines","drawBorder","ticks","fontColor","text","yAxes","borderDash","borderDashOffset","color","divider","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","beginAtZero","min","maxTicksLimit","callback","value","tooltips","enabled","mode","intersect","caretSize","yPadding","xPadding","borderWidth","common","white","titleFontColor","primary","bodyFontColor","footerFontColor","callbacks","title","label","tooltipItem","yLabel","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    position: 'relative'\n  }\n}));\n\nfunction Chart({\n  className, data: dataProp, labels, ...rest\n}) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = (canvas) => {\n    const ctx = canvas.getContext('2d');\n    const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n\n    gradient.addColorStop(0, fade(theme.palette.secondary.main, 0.2));\n    gradient.addColorStop(0.9, 'rgba(255,255,255,0)');\n    gradient.addColorStop(1, 'rgba(255,255,255,0)');\n\n    return {\n      datasets: [\n        {\n          data: dataProp,\n          backgroundColor: gradient,\n          borderColor: theme.palette.secondary.main,\n          pointBorderColor: '#FFFFFF',\n          pointBorderWidth: 3,\n          pointRadius: 6,\n          pointBackgroundColor: theme.palette.secondary.main\n        }\n      ],\n      labels\n    };\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    scales: {\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            padding: 20,\n            fontColor: theme.palette.text.secondary\n          }\n        }\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          },\n          ticks: {\n            padding: 20,\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0,\n            maxTicksLimit: 7,\n            callback: (value) => (value > 0 ? `${value}K` : value)\n          }\n        }\n      ]\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      caretSize: 10,\n      yPadding: 20,\n      xPadding: 20,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.common.white,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary,\n      callbacks: {\n        title: () => {},\n        label: (tooltipItem) => {\n          let label = `Income: ${tooltipItem.yLabel}`;\n\n          if (tooltipItem.yLabel > 0) {\n            label += 'K';\n          }\n\n          return label;\n        }\n      }\n    }\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Line\n        data={data}\n        options={options}\n        //\n      />\n    </div>\n  );\n}\n\nChart.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.array.isRequired,\n  labels: PropTypes.array.isRequired\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}