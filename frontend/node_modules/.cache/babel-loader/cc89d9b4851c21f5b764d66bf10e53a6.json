{"ast":null,"code":"var _jsxFileName = \"/Users/phuongle/Documents/Internship/Klavins Lab/project-dashboard/src/views/ProjectList/Filter/index.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Checkbox, Chip, Divider, FormControlLabel, Input, Card, colors } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MultiSelect from './MultiSelect';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  keywords: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  searchIcon: {\n    color: theme.palette.icon,\n    marginRight: theme.spacing(2)\n  },\n  chips: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap'\n  },\n  chip: {\n    margin: theme.spacing(1)\n  },\n  selects: {\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    backgroundColor: colors.grey[50],\n    padding: theme.spacing(1)\n  },\n  inNetwork: {\n    marginLeft: 'auto'\n  }\n}));\nconst selects = [{\n  label: 'Type',\n  options: ['Freelance', 'Full Time', 'Part Time', 'Internship']\n}, {\n  label: 'Level',\n  options: ['Novice', 'Expert']\n}, {\n  label: 'Location',\n  options: ['Africa', 'Asia', 'Australia', 'Europe', 'North America', 'South America']\n}, {\n  label: 'Roles',\n  options: ['Android', 'Web Developer', 'iOS']\n}];\n\nfunction Filter({\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n  const [inputValue, setInputValue] = useState('');\n  const [chips, setChips] = useState(['Freelance', 'Full Time', 'Novice', 'Europe', 'Android', 'Web Developer']);\n\n  const handleInputChange = event => {\n    event.persist();\n    setInputValue(event.target.value);\n  };\n\n  const handleInputKeyup = event => {\n    event.persist();\n\n    if (event.keyCode === 13 && inputValue) {\n      if (!chips.includes(inputValue)) {\n        setChips(prevChips => [...prevChips, inputValue]);\n        setInputValue('');\n      }\n    }\n  };\n\n  const handleChipDelete = chip => {\n    setChips(prevChips => prevChips.filter(prevChip => chip !== prevChip));\n  };\n\n  const handleMultiSelectChange = value => {\n    setChips(value);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.keywords,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    className: classes.searchIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    disableUnderline: true,\n    onChange: handleInputChange,\n    onKeyUp: handleInputKeyup,\n    placeholder: \"Enter a keyword\",\n    value: inputValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chips,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, chips.map(chip => /*#__PURE__*/React.createElement(Chip, {\n    className: classes.chip,\n    key: chip,\n    label: chip,\n    onDelete: () => handleChipDelete(chip),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.selects,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, selects.map(select => /*#__PURE__*/React.createElement(MultiSelect, {\n    key: select.label,\n    label: select.label,\n    onChange: handleMultiSelectChange,\n    options: select.options,\n    value: chips,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: classes.inNetwork,\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      color: \"primary\",\n      defaultChecked: true //\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }),\n    label: \"In network\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  })));\n}\n\nFilter.propTypes = {\n  className: PropTypes.string\n};\nexport default Filter;","map":{"version":3,"sources":["/Users/phuongle/Documents/Internship/Klavins Lab/project-dashboard/src/views/ProjectList/Filter/index.js"],"names":["React","useState","PropTypes","clsx","makeStyles","Checkbox","Chip","Divider","FormControlLabel","Input","Card","colors","SearchIcon","MultiSelect","useStyles","theme","root","keywords","padding","spacing","display","alignItems","searchIcon","color","palette","icon","marginRight","chips","flexWrap","chip","margin","selects","backgroundColor","grey","inNetwork","marginLeft","label","options","Filter","className","rest","classes","inputValue","setInputValue","setChips","handleInputChange","event","persist","target","value","handleInputKeyup","keyCode","includes","prevChips","handleChipDelete","filter","prevChip","handleMultiSelectChange","map","select","propTypes","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SACEC,QADF,EAEEC,IAFF,EAGEC,OAHF,EAIEC,gBAJF,EAKEC,KALF,EAMEC,IANF,EAOEC,MAPF,QAQO,mBARP;AASA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,MAAMC,SAAS,GAAGV,UAAU,CAAEW,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE,EADiC;AAEvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,CADD;AAERC,IAAAA,OAAO,EAAE,MAFD;AAGRC,IAAAA,UAAU,EAAE;AAHJ,GAF6B;AAOvCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAER,KAAK,CAACS,OAAN,CAAcC,IADX;AAEVC,IAAAA,WAAW,EAAEX,KAAK,CAACI,OAAN,CAAc,CAAd;AAFH,GAP2B;AAWvCQ,EAAAA,KAAK,EAAE;AACLT,IAAAA,OAAO,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,CADJ;AAELC,IAAAA,OAAO,EAAE,MAFJ;AAGLC,IAAAA,UAAU,EAAE,QAHP;AAILO,IAAAA,QAAQ,EAAE;AAJL,GAXgC;AAiBvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAEf,KAAK,CAACI,OAAN,CAAc,CAAd;AADJ,GAjBiC;AAoBvCY,EAAAA,OAAO,EAAE;AACPX,IAAAA,OAAO,EAAE,MADF;AAEPC,IAAAA,UAAU,EAAE,QAFL;AAGPO,IAAAA,QAAQ,EAAE,MAHH;AAIPI,IAAAA,eAAe,EAAErB,MAAM,CAACsB,IAAP,CAAY,EAAZ,CAJV;AAKPf,IAAAA,OAAO,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AALF,GApB8B;AA2BvCe,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAE;AADH;AA3B4B,CAAZ,CAAD,CAA5B;AAgCA,MAAMJ,OAAO,GAAG,CACd;AACEK,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,OAAO,EAAE,CAAC,WAAD,EAAc,WAAd,EAA2B,WAA3B,EAAwC,YAAxC;AAFX,CADc,EAKd;AACED,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,QAAX;AAFX,CALc,EASd;AACED,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,OAAO,EAAE,CACP,QADO,EAEP,MAFO,EAGP,WAHO,EAIP,QAJO,EAKP,eALO,EAMP,eANO;AAFX,CATc,EAoBd;AACED,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,OAAO,EAAE,CAAC,SAAD,EAAY,eAAZ,EAA6B,KAA7B;AAFX,CApBc,CAAhB;;AA0BA,SAASC,MAAT,CAAgB;AAAEC,EAAAA,SAAF;AAAa,KAAGC;AAAhB,CAAhB,EAAwC;AACtC,QAAMC,OAAO,GAAG3B,SAAS,EAAzB;AACA,QAAM,CAAC4B,UAAD,EAAaC,aAAb,IAA8B1C,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC0B,KAAD,EAAQiB,QAAR,IAAoB3C,QAAQ,CAAC,CACjC,WADiC,EAEjC,WAFiC,EAGjC,QAHiC,EAIjC,QAJiC,EAKjC,SALiC,EAMjC,eANiC,CAAD,CAAlC;;AASA,QAAM4C,iBAAiB,GAAIC,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACC,OAAN;AACAJ,IAAAA,aAAa,CAACG,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAb;AACD,GAHD;;AAKA,QAAMC,gBAAgB,GAAIJ,KAAD,IAAW;AAClCA,IAAAA,KAAK,CAACC,OAAN;;AAEA,QAAID,KAAK,CAACK,OAAN,KAAkB,EAAlB,IAAwBT,UAA5B,EAAwC;AACtC,UAAI,CAACf,KAAK,CAACyB,QAAN,CAAeV,UAAf,CAAL,EAAiC;AAC/BE,QAAAA,QAAQ,CAAES,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAeX,UAAf,CAAhB,CAAR;AACAC,QAAAA,aAAa,CAAC,EAAD,CAAb;AACD;AACF;AACF,GATD;;AAWA,QAAMW,gBAAgB,GAAIzB,IAAD,IAAU;AACjCe,IAAAA,QAAQ,CAAES,SAAD,IAAeA,SAAS,CAACE,MAAV,CAAkBC,QAAD,IAAc3B,IAAI,KAAK2B,QAAxC,CAAhB,CAAR;AACD,GAFD;;AAIA,QAAMC,uBAAuB,GAAIR,KAAD,IAAW;AACzCL,IAAAA,QAAQ,CAACK,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE,oBAAC,IAAD,oBACMT,IADN;AAEE,IAAA,SAAS,EAAErC,IAAI,CAACsC,OAAO,CAACzB,IAAT,EAAeuB,SAAf,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIE;AAAK,IAAA,SAAS,EAAEE,OAAO,CAACxB,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEwB,OAAO,CAACnB,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AACE,IAAA,gBAAgB,MADlB;AAEE,IAAA,QAAQ,EAAEuB,iBAFZ;AAGE,IAAA,OAAO,EAAEK,gBAHX;AAIE,IAAA,WAAW,EAAC,iBAJd;AAKE,IAAA,KAAK,EAAER,UALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAJF,eAcE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,eAeE;AAAK,IAAA,SAAS,EAAED,OAAO,CAACd,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAAC+B,GAAN,CAAW7B,IAAD,iBACT,oBAAC,IAAD;AACE,IAAA,SAAS,EAAEY,OAAO,CAACZ,IADrB;AAEE,IAAA,GAAG,EAAEA,IAFP;AAGE,IAAA,KAAK,EAAEA,IAHT;AAIE,IAAA,QAAQ,EAAE,MAAMyB,gBAAgB,CAACzB,IAAD,CAJlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAfF,eAyBE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,eA0BE;AAAK,IAAA,SAAS,EAAEY,OAAO,CAACV,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,CAAC2B,GAAR,CAAaC,MAAD,iBACX,oBAAC,WAAD;AACE,IAAA,GAAG,EAAEA,MAAM,CAACvB,KADd;AAEE,IAAA,KAAK,EAAEuB,MAAM,CAACvB,KAFhB;AAGE,IAAA,QAAQ,EAAEqB,uBAHZ;AAIE,IAAA,OAAO,EAAEE,MAAM,CAACtB,OAJlB;AAKE,IAAA,KAAK,EAAEV,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,eAUE,oBAAC,gBAAD;AACE,IAAA,SAAS,EAAEc,OAAO,CAACP,SADrB;AAEE,IAAA,OAAO,eACL,oBAAC,QAAD;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,cAAc,MAFhB,CAEiB;AAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ;AAQE,IAAA,KAAK,EAAC,YARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CA1BF,CADF;AAkDD;;AAEDI,MAAM,CAACsB,SAAP,GAAmB;AACjBrB,EAAAA,SAAS,EAAErC,SAAS,CAAC2D;AADJ,CAAnB;AAIA,eAAevB,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Checkbox,\n  Chip,\n  Divider,\n  FormControlLabel,\n  Input,\n  Card,\n  colors\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MultiSelect from './MultiSelect';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  keywords: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  searchIcon: {\n    color: theme.palette.icon,\n    marginRight: theme.spacing(2)\n  },\n  chips: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap'\n  },\n  chip: {\n    margin: theme.spacing(1)\n  },\n  selects: {\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    backgroundColor: colors.grey[50],\n    padding: theme.spacing(1)\n  },\n  inNetwork: {\n    marginLeft: 'auto'\n  }\n}));\n\nconst selects = [\n  {\n    label: 'Type',\n    options: ['Freelance', 'Full Time', 'Part Time', 'Internship']\n  },\n  {\n    label: 'Level',\n    options: ['Novice', 'Expert']\n  },\n  {\n    label: 'Location',\n    options: [\n      'Africa',\n      'Asia',\n      'Australia',\n      'Europe',\n      'North America',\n      'South America'\n    ]\n  },\n  {\n    label: 'Roles',\n    options: ['Android', 'Web Developer', 'iOS']\n  }\n];\n\nfunction Filter({ className, ...rest }) {\n  const classes = useStyles();\n  const [inputValue, setInputValue] = useState('');\n  const [chips, setChips] = useState([\n    'Freelance',\n    'Full Time',\n    'Novice',\n    'Europe',\n    'Android',\n    'Web Developer'\n  ]);\n\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputValue(event.target.value);\n  };\n\n  const handleInputKeyup = (event) => {\n    event.persist();\n\n    if (event.keyCode === 13 && inputValue) {\n      if (!chips.includes(inputValue)) {\n        setChips((prevChips) => [...prevChips, inputValue]);\n        setInputValue('');\n      }\n    }\n  };\n\n  const handleChipDelete = (chip) => {\n    setChips((prevChips) => prevChips.filter((prevChip) => chip !== prevChip));\n  };\n\n  const handleMultiSelectChange = (value) => {\n    setChips(value);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <div className={classes.keywords}>\n        <SearchIcon className={classes.searchIcon} />\n        <Input\n          disableUnderline\n          onChange={handleInputChange}\n          onKeyUp={handleInputKeyup}\n          placeholder=\"Enter a keyword\"\n          value={inputValue}\n        />\n      </div>\n      <Divider />\n      <div className={classes.chips}>\n        {chips.map((chip) => (\n          <Chip\n            className={classes.chip}\n            key={chip}\n            label={chip}\n            onDelete={() => handleChipDelete(chip)}\n          />\n        ))}\n      </div>\n      <Divider />\n      <div className={classes.selects}>\n        {selects.map((select) => (\n          <MultiSelect\n            key={select.label}\n            label={select.label}\n            onChange={handleMultiSelectChange}\n            options={select.options}\n            value={chips}\n          />\n        ))}\n        <FormControlLabel\n          className={classes.inNetwork}\n          control={(\n            <Checkbox\n              color=\"primary\"\n              defaultChecked //\n            />\n          )}\n          label=\"In network\"\n        />\n      </div>\n    </Card>\n  );\n}\n\nFilter.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Filter;\n"]},"metadata":{},"sourceType":"module"}