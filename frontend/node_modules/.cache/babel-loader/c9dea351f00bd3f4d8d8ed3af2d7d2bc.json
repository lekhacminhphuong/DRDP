{"ast":null,"code":"var _jsxFileName = \"/Users/phuongle/Documents/newFrontEnd/src/views/DataPage/GraphSpace.js\";\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nexport function GraphSpace() {\n  // UNCOMMENT THIS BEFORE BUIDLING\n  // let filtData = this.props.data.filter(d => d['JurisdictionName'] == this.state.State &&\n  //     d['QuestionDesc'] == \"Total individuals served during the year (A1 + A2).\");\n  // if (this.props.data.length == 0) {\n  //     return null;\n  // }\n  // let gData = [{ \"x\": filtData[0][\"ReportInstanceYear\"], \"y\": filtData[0][\"IntAnswerValue\"] },\n  // { \"x\": filtData[1][\"ReportInstanceYear\"], \"y\": filtData[1][\"IntAnswerValue\"] },\n  // { \"x\": filtData[2][\"ReportInstanceYear\"], \"y\": filtData[2][\"IntAnswerValue\"] },\n  // { \"x\": filtData[3][\"ReportInstanceYear\"], \"y\": filtData[3][\"IntAnswerValue\"] },\n  // { \"x\": filtData[4][\"ReportInstanceYear\"], \"y\": filtData[4][\"IntAnswerValue\"] },\n  // { \"x\": filtData[5][\"ReportInstanceYear\"], \"y\": filtData[5][\"IntAnswerValue\"] },\n  // { \"x\": filtData[6][\"ReportInstanceYear\"], \"y\": filtData[6][\"IntAnswerValue\"] },\n  // { \"x\": filtData[7][\"ReportInstanceYear\"], \"y\": filtData[7][\"IntAnswerValue\"] }\n  // ]\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"graphSpace\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    width: 800,\n    height: 600 // data={gData}\n    ,\n    margin: {\n      top: 5,\n      right: 30,\n      left: 20,\n      bottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"y\",\n    stroke: \"#8884d8\",\n    activeDot: {\n      r: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/phuongle/Documents/newFrontEnd/src/views/DataPage/GraphSpace.js"],"names":["React","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","GraphSpace","top","right","left","bottom","r"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,SADJ,EACeC,IADf,EACqBC,KADrB,EAC4BC,KAD5B,EACmCC,aADnC,EACkDC,OADlD,EAC2DC,MAD3D,QAEO,UAFP;AAIA,OAAO,SAASC,UAAT,GAAsB;AACrB;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACI;AAAK,IAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGA,oBAAC,SAAD;AACI,IAAA,KAAK,EAAE,GADX;AAEI,IAAA,MAAM,EAAE,GAFZ,CAGI;AAHJ;AAII,IAAA,MAAM,EAAE;AACJC,MAAAA,GAAG,EAAE,CADD;AACIC,MAAAA,KAAK,EAAE,EADX;AACeC,MAAAA,IAAI,EAAE,EADrB;AACyBC,MAAAA,MAAM,EAAE;AADjC,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQI,oBAAC,aAAD;AAAe,IAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eASI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,eAUI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,eAWI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,eAYI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC,GAA9B;AAAkC,IAAA,MAAM,EAAC,SAAzC;AAAmD,IAAA,SAAS,EAAE;AAAEC,MAAAA,CAAC,EAAE;AAAL,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CAHA,CADJ;AAoBP","sourcesContent":["import React from 'react';\nimport {\n    LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nexport function GraphSpace (){\n        // UNCOMMENT THIS BEFORE BUIDLING\n        // let filtData = this.props.data.filter(d => d['JurisdictionName'] == this.state.State &&\n        //     d['QuestionDesc'] == \"Total individuals served during the year (A1 + A2).\");\n\n        // if (this.props.data.length == 0) {\n        //     return null;\n        // }\n\n        // let gData = [{ \"x\": filtData[0][\"ReportInstanceYear\"], \"y\": filtData[0][\"IntAnswerValue\"] },\n        // { \"x\": filtData[1][\"ReportInstanceYear\"], \"y\": filtData[1][\"IntAnswerValue\"] },\n        // { \"x\": filtData[2][\"ReportInstanceYear\"], \"y\": filtData[2][\"IntAnswerValue\"] },\n        // { \"x\": filtData[3][\"ReportInstanceYear\"], \"y\": filtData[3][\"IntAnswerValue\"] },\n        // { \"x\": filtData[4][\"ReportInstanceYear\"], \"y\": filtData[4][\"IntAnswerValue\"] },\n        // { \"x\": filtData[5][\"ReportInstanceYear\"], \"y\": filtData[5][\"IntAnswerValue\"] },\n        // { \"x\": filtData[6][\"ReportInstanceYear\"], \"y\": filtData[6][\"IntAnswerValue\"] },\n        // { \"x\": filtData[7][\"ReportInstanceYear\"], \"y\": filtData[7][\"IntAnswerValue\"] }\n        // ]\n\n        return (\n            <div id='graphSpace'>\n\n            {/* UNCOMMENT THIS BEFORE BUILDING */}\n            <LineChart\n                width={800}\n                height={600}\n                // data={gData}\n                margin={{\n                    top: 5, right: 30, left: 20, bottom: 5,\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"x\" />\n                <YAxis />\n                <Tooltip />\n                <Line type=\"monotone\" dataKey=\"y\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n            </LineChart>\n            </div>\n        )\n}"]},"metadata":{},"sourceType":"module"}